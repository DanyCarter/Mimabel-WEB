{"_id":"@polka/url","_rev":"18-46c451d485e8022855f1d6ea147cd268","name":"@polka/url","dist-tags":{"latest":"0.5.0","next":"1.0.0-next.25"},"versions":{"0.5.0":{"name":"@polka/url","version":"0.5.0","description":"Super fast, memoized `req.url` parser","repository":{"type":"git","url":"https://github.com/lukeed/polka.git"},"license":"MIT","author":{"name":"Luke Edwards","email":"luke@lukeed.com","url":"https://lukeed.com"},"publishConfig":{"access":"public"},"_id":"@polka/url@0.5.0","dist":{"shasum":"b21510597fd601e5d7c95008b76bf0d254ebfd31","tarball":"https://registry.npmjs.org/@polka/url/-/url-0.5.0.tgz","integrity":"sha512-oZLYFEAzUKyi3SKnXvj32ZCEGH6RDnao7COuCVhDydMS9NrCSVXhM79VaKyP5+Zc33m0QXEd2DN3UkU7OsHcfw==","fileCount":4,"unpackedSize":3717,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh2Ww9CRA9TVsSAnZWagAAr6sQAIHHnsZsVdjKrI1ss1kw\nxpm/SvsiTrdn7MK+ReY8QYksLLYeYNP/IsVYh+0h9Ok7M8xK0UryG2GC2J4a\nW5gQNz15SW1GSKMdxZoZuV5IOgq344RZawCyHH1mfxNb+ozVYQyhGK7wP2Hq\nelE1RGiOPwSLeaABXGqwWq07MVqb9rP4k7d4Xw8bu2LteKhKuret/IK3S1D3\n73+oX/6FA3G/+FfDFcXm1z9V5VHUiYtOllAU/xInx2ZRTnodrfm2wlPKXhTH\nLTYbV4Vdt+LY7haf2RgdbJ+TS0MH3MesejsQjNtjYHoJHN2Xp6/78fNLyax/\n5nx4AMVby6k7uuRNrTkoE4YHnrWX7Il8YZe8LujBMbrsLXpoWvp4lJWppFyi\nQbrQMlinLPB+3EpX2+38NHbY6hPwvU2fyaqoPBaR70LbBUBKrH2ldCB5VmZH\ndIfvVm0ptBphArD5yO196fBV4b+s0rWioexQys/txYzN1kZGAxzPUKt4LFBP\nlgnOnPC2iVXdr7qqF5UQpk9FtzHOKpsgOlX330UYrU77TJmKBab4NhMhromD\nj8DpUsBwxpSqFPYCMxYjTNIdeIlYaAFR/UWQ77l778jw19ssabBYcrqXfsoi\njhNf2FEhfAgJ58SJuFMAfU4SPW5zTb2U0teHN2546cjX/qubkOpEieIhsviU\nKHiC\r\n=5ii4\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDnWS+2kAXBM0A8ih8nrd4Euz5M+jXMjRWAgNsvHe/6XAiEAoUblumF0rgH1lx6ELW8nqFXaluXCufGUolXnQoKlqoE="}]},"maintainers":[{"name":"lukeed","email":"luke@lukeed.com"}],"_npmUser":{"name":"lukeed","email":"luke@lukeed.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/url_0.5.0_1537294652191_0.5543897641900482"},"_hasShrinkwrap":false},"1.0.0-next.0":{"version":"1.0.0-next.0","name":"@polka/url","repository":{"type":"git","url":"git+https://github.com/lukeed/polka.git"},"description":"Super fast, memoized `req.url` parser","license":"MIT","author":{"name":"Luke Edwards","email":"luke@lukeed.com","url":"https://lukeed.com"},"publishConfig":{"access":"public"},"gitHead":"3598f0c5a1b343b6a37f661084c1643e832ff701","readme":"# @polka/url [![npm](https://badgen.now.sh/npm/v/@polka/url)](https://npmjs.org/package/@polka/url)\n\n> Super fast, memoized `req.url` parser; _not_ limited to [Polka][polka]!\n\nParses the `url` from a [`IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) request. The returned object will always only contain the following keys: `search`, `query`, `pathname`, `path`, `href`, and `_raw`.\n\n> **Note:** This library does not process `protocol`, `hostname`, `port`, etc.<br>This is because the incoming `req.url` value only begins with the path information.\n\nParsed requests will be mutated with a `_parsedUrl` key, containing the returned output. This is used for future memoization, so as to avoid parsing the same `url` value multiple times.\n\n## Install\n\n```\n$ npm install --save @polka/url\n```\n\n## Usage\n\n```js\nconst parse = require('@polka/url');\n\nlet req = { url: '/foo/bar?fizz=buzz' };\nlet foo = parse(req);\n//=> { search: '?fizz=buzz',\n//=>   query: 'fizz=buzz',\n//=>   pathname: '/foo/bar',\n//=>   path: '/foo/bar?fizz=buzz',\n//=>   href: '/foo/bar?fizz=buzz',\n//=>   _raw: '/foo/bar?fizz=buzz' }\n\n// Attaches result for future memoization\nassert.deepEqual(foo, req._parsedUrl); //=> true\n```\n\n## API\n\n### url(req)\nReturns: `Object` or `undefined`\n\n> **Important:** The `req` must have a `url` key, otherwise `undefined` will be returned.<br>If no input is provided at all, a `TypeError` will be thrown.\n\n#### req\nType: `IncomingMessage` or `Object`\n\nThe incoming HTTP request (`req`) or a plain `Object` with a `url` key.\n\n> **Note:** In Node.js servers, the [`req.url`](https://nodejs.org/api/http.html#http_message_url) begins with a pathname & does not include a `hash`.\n\n\n## Benchmarks\n\n> Running the `parseurl` benchmark suite on Node 10.9.0\n\n```\nParsing: \"/foo/bar?user=tj&pet=fluffy\"\n  nativeurl  x  3,496,593 ops/sec ±0.78% (194 runs sampled)\n  parseurl   x  5,702,515 ops/sec ±0.59% (194 runs sampled)\n  @polka/url x 11,510,281 ops/sec ±1.93% (192 runs sampled)\n\nREPEAT: \"/foo/bar?user=tj&pet=fluffy\"\n  nativeurl  x  3,344,884 ops/sec ±0.13% (191 runs sampled)\n  parseurl   x 20,386,848 ops/sec ±0.22% (192 runs sampled)\n  @polka/url x 21,088,923 ops/sec ±0.58% (191 runs sampled)\n\nParsing: \"/foo/bar\"\n  nativeurl  x  9,808,119 ops/sec ±0.51% (190 runs sampled)\n  parseurl   x 26,186,627 ops/sec ±0.16% (195 runs sampled)\n  @polka/url x 43,946,765 ops/sec ±0.55% (194 runs sampled)\n\nParsing: \"/\"\n  nativeurl  x 15,698,746 ops/sec ±0.79% (192 runs sampled)\n  parseurl   x 36,861,339 ops/sec ±0.19% (195 runs sampled)\n  @polka/url x 48,295,119 ops/sec ±0.51% (194 runs sampled)\n```\n\n\n## Support\n\nAny issues or questions can be sent to the [Polka][polka] repository.<br>However, please specify that your inquiry is about `@polka/url` specifically.\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n\n[polka]: https://github.com/lukeed/polka\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/lukeed/polka/issues"},"homepage":"https://github.com/lukeed/polka#readme","_id":"@polka/url@1.0.0-next.0","_nodeVersion":"10.13.0","_npmVersion":"lerna/3.13.1/node@v10.13.0+x64 (darwin)","dist":{"integrity":"sha512-khlIazYuw74cnv6yK5iA4Snggo+ICeeqtWVZbzuHFdvEbVIf2veenitVjvTcZ4S9WD8NTd3Rl+HrVOATAA/qWw==","shasum":"818f693dd4ee2a742ff43dc789eccbcb6ba6efba","tarball":"https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.0.tgz","fileCount":4,"unpackedSize":5006,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJchL3sCRA9TVsSAnZWagAA0DAP/0Kumyh+lVIqGSwUpQxj\neRptsjCJ0254Egej1uoDACDbDtRZF0ho3Y4fSzEZFM+5/eQSoIcbK1Ij83be\nUZNp0ZmfBhpH+wa3ZBjL9Gfhe5q7ZBHpFAbsSaOtMWCiiyA2XoVdv0bphZtP\nMCDw7Klslt14EO9rCzXQPJ46rEfcdiYqMELmj4G4KBVRdBJsMNsM8R7Zf3UY\nIKIF/7f66fJzhM5li7D+mizE3mG/gEz28UL/c1tOVkWyU2TZKW6YtYg4X6lT\nHdRQBvXBZnw4A8pQ/wzGLGt/87xKYP3sYfptG74gc8WTPdSlAgv/7DvBKIlu\nBKwvKYD0sslGfwyfy7kKc0jjwP0prIHrdBOcNPHb5kpGf7Fg2WsdIaWWqyx4\nSUuI6SSFF1L+u1yw4X+qLi33jwZXyL2F9uv+i/5HfeIgu/Y7D5FPuiUhzBXN\nAi09c3ar+zUxpEWF/Te4hX8eWCnJwPmSrdzEM0t9xS9Tfk2FVHKS7bl1atC3\nKGJtLMgWwkxlUiNGZN2I0G+Spcunsz2JYBBNLWQZxO7oeQfOSRS2npPPKnaq\nOqgJnpCNVpz0sTdyb4JHZf9RPOqYtkh/dJEdzs7dPNiMH2bDK1dSClpL3PnY\nG2M4l1LsIKmE+nfUWI2CNvIEGTYwradzVgz5sd65pEl0MZ3atmNiWU1XJ4ma\nF02P\r\n=inoO\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCQ/yTzIrSmjRLg6eu9mSjTUH47W9cAX0JxvydFcxNtywIhALPmKO4eLZZgSy1kgRc03g8e6xZ0DmzEQPG0A3xT7Jb5"}]},"maintainers":[{"name":"lukeed","email":"luke@lukeed.com"}],"_npmUser":{"name":"lukeed","email":"luke@lukeed.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/url_1.0.0-next.0_1552203243849_0.9972463325570979"},"_hasShrinkwrap":false},"1.0.0-next.1":{"version":"1.0.0-next.1","name":"@polka/url","repository":{"type":"git","url":"git+https://github.com/lukeed/polka.git"},"description":"Super fast, memoized `req.url` parser","license":"MIT","author":{"name":"Luke Edwards","email":"luke@lukeed.com","url":"https://lukeed.com"},"publishConfig":{"access":"public"},"gitHead":"8d32406bd3fa924b648df3e67ed32da502293904","readme":"# @polka/url [![npm](https://badgen.now.sh/npm/v/@polka/url)](https://npmjs.org/package/@polka/url)\n\n> Super fast, memoized `req.url` parser; _not_ limited to [Polka][polka]!\n\nParses the `url` from a [`IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) request. The returned object will always only contain the following keys: `search`, `query`, `pathname`, `path`, `href`, and `_raw`.\n\n> **Note:** This library does not process `protocol`, `hostname`, `port`, etc.<br>This is because the incoming `req.url` value only begins with the path information.\n\nParsed requests will be mutated with a `_parsedUrl` key, containing the returned output. This is used for future memoization, so as to avoid parsing the same `url` value multiple times.\n\n## Install\n\n```\n$ npm install --save @polka/url\n```\n\n## Usage\n\n```js\nconst parse = require('@polka/url');\n\nlet req = { url: '/foo/bar?fizz=buzz' };\nlet foo = parse(req);\n//=> { search: '?fizz=buzz',\n//=>   query: 'fizz=buzz',\n//=>   pathname: '/foo/bar',\n//=>   path: '/foo/bar?fizz=buzz',\n//=>   href: '/foo/bar?fizz=buzz',\n//=>   _raw: '/foo/bar?fizz=buzz' }\n\n// Attaches result for future memoization\nassert.deepEqual(foo, req._parsedUrl); //=> true\n\n// Example with `toDecode` param\nreq = { url: '/f%C3%B8%C3%B8%C3%9F%E2%88%82r?phone=%2b8675309' };\nparse(req, true);\n//=> { search: '?phone=+8675309',\n//=>   query: { phone: '+8675309' },\n//=>   pathname: '/føøß∂r',\n//=>   path: '/føøß∂r?phone=+8675309',\n//=>   href: '/føøß∂r?phone=+8675309',\n//=>   _raw: '/føøß∂r?phone=+8675309' }\n\n// Attaches awareness key\nassert(req._decoded); //=> true\n```\n\n## API\n\n### url(req, toDecode)\nReturns: `Object` or `undefined`\n\n> **Important:** The `req` must have a `url` key, otherwise `undefined` will be returned.<br>If no input is provided at all, a `TypeError` will be thrown.\n\n#### req\nType: `IncomingMessage` or `Object`\n\nThe incoming HTTP request (`req`) or a plain `Object` with a `url` key.\n\n> **Note:** In Node.js servers, the [`req.url`](https://nodejs.org/api/http.html#http_message_url) begins with a pathname & does not include a `hash`.\n\n#### toDecode\nType: `Boolean`<br>\nDefault: `false`\n\nIf enabled, the `url` will be fully decoded (via [`decodeURIComponent`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent)) and the output keys will be slightly different:\n\n* `path`, `pathname`, `href`, `_raw` &mdash; will be the decoded strings\n* `search` &mdash; if there is a value, will be decoded string, else remain `null`\n* `query` &mdash; if there is a value, will be a decoded **object**, else remain `null`\n\nAdditionally, the `req` is mutated with `req._decoded = true` so as to prevent repetitive decoding.\n\n\n## Benchmarks\n\nCheck out the [`bench`](/bench) directory for in-depth benchmark results and comparisons.\n\n\n## Support\n\nAny issues or questions can be sent to the [Polka][polka] repository.<br>However, please specify that your inquiry is about `@polka/url` specifically.\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n\n[polka]: https://github.com/lukeed/polka\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/lukeed/polka/issues"},"homepage":"https://github.com/lukeed/polka#readme","_id":"@polka/url@1.0.0-next.1","_nodeVersion":"10.13.0","_npmVersion":"lerna/3.13.1/node@v10.13.0+x64 (darwin)","dist":{"integrity":"sha512-6d8YbKW4hjJMnU6ZJSDLtALWiB4J//OIPaP885ruf5U8MLZHigocDxhjgvLwbV6bGkikhllgTjD9eWioKWAQdA==","shasum":"e121c79b30b0873e4701390d3274245f81cfae77","tarball":"https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.1.tgz","fileCount":4,"unpackedSize":5631,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcoAY/CRA9TVsSAnZWagAACwoP/j1FFwNwcdX6dtXGaI07\nlD3ShDg+r78bg2XW2W+zKo9oRLjGbshgADUc++wNRvHn3IUQWZ0NHzewOBgT\nyi391PD/uvTeyYk74gNgmssRNnDvrUTWRkxlDKbiGeJXeIs4DY7ajhjzPrgb\ny0+BUN+zjT1mmhZTO/x0uqVk/pQtvj1/dASdLn3VaoXCDJjhhUe3nunNTnIF\n64TE9QFzKMPoaW3wREMESLSdIgRZCg+E3tFzRz8vjgqu/+MWn88W4HJDcEEB\nDjDNRXbHDnsui9KfQ09Zouf1WFMh5/I9RjnvzSTDmDCYghhhaH6zMi9a8QHu\nNSM+gPhW7gf0PhH15ZOtNpsx2dtIGB9qirD17dFr7Al+5DfZ6kht6Mzjdilg\n7Dr0wA1dmcBANI9eq8ITa/LyjP+/z0YCz7azaRzfOU8W5O6Yjp6nPFqovuU4\nTGEpFZB9ovJw845/cIlNhsHzmLq60zI5eLh8MY8WmETQWC++gFxNW5TXcGOm\n2mCQNiqvySqjiqpcA34kBpvDIfpD8wt5OUTNtL1Ird6Gr3QTn2Mso/5gS8om\njpmoTT1b8G/8EBOMvdm20u3dTTRs21H/ipLUCrZ7ciQC+CuHr7pxJKtMHYDL\nuRwHp3yfhIVTYZo54GV3ESzldrP7XAcfiVj5txhaQUcoZQ8oCmAOsoVDOhN4\nAjUU\r\n=cGXH\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCpBTJJmoiIgOhF6zpBfg2hOmF+sBz1dZ0MJfHNvMeQ0wIgIvXkHUqdmoyGK3L6u9FRRjYKYNKthWdFoWvLyBraivo="}]},"maintainers":[{"name":"lukeed","email":"luke@lukeed.com"}],"_npmUser":{"name":"lukeed","email":"luke@lukeed.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/url_1.0.0-next.1_1553991231126_0.22464591474926654"},"_hasShrinkwrap":false},"1.0.0-next.3":{"version":"1.0.0-next.3","name":"@polka/url","repository":{"type":"git","url":"git+https://github.com/lukeed/polka.git"},"description":"Super fast, memoized `req.url` parser","module":"index.mjs","main":"index.js","license":"MIT","author":{"name":"Luke Edwards","email":"luke@lukeed.com","url":"https://lukeed.com"},"publishConfig":{"access":"public"},"gitHead":"602086f1f4f1a6103e0589b04b69f8b4d934f0fc","readme":"# @polka/url [![npm](https://badgen.now.sh/npm/v/@polka/url)](https://npmjs.org/package/@polka/url)\n\n> Super fast, memoized `req.url` parser; _not_ limited to [Polka][polka]!\n\nParses the `url` from a [`IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) request. The returned object will always only contain the following keys: `search`, `query`, `pathname`, `path`, `href`, and `_raw`.\n\n> **Note:** This library does not process `protocol`, `hostname`, `port`, etc.<br>This is because the incoming `req.url` value only begins with the path information.\n\nParsed requests will be mutated with a `_parsedUrl` key, containing the returned output. This is used for future memoization, so as to avoid parsing the same `url` value multiple times.\n\n## Install\n\n```\n$ npm install --save @polka/url\n```\n\n## Usage\n\n```js\nconst parse = require('@polka/url');\n\nlet req = { url: '/foo/bar?fizz=buzz' };\nlet foo = parse(req);\n//=> { search: '?fizz=buzz',\n//=>   query: 'fizz=buzz',\n//=>   pathname: '/foo/bar',\n//=>   path: '/foo/bar?fizz=buzz',\n//=>   href: '/foo/bar?fizz=buzz',\n//=>   _raw: '/foo/bar?fizz=buzz' }\n\n// Attaches result for future memoization\nassert.deepEqual(foo, req._parsedUrl); //=> true\n\n// Example with `toDecode` param\nreq = { url: '/f%C3%B8%C3%B8%C3%9F%E2%88%82r?phone=%2b8675309' };\nparse(req, true);\n//=> { search: '?phone=+8675309',\n//=>   query: { phone: '+8675309' },\n//=>   pathname: '/føøß∂r',\n//=>   path: '/føøß∂r?phone=+8675309',\n//=>   href: '/føøß∂r?phone=+8675309',\n//=>   _raw: '/føøß∂r?phone=+8675309' }\n\n// Attaches awareness key\nassert(req._decoded); //=> true\n```\n\n## API\n\n### url(req, toDecode)\nReturns: `Object` or `undefined`\n\n> **Important:** The `req` must have a `url` key, otherwise `undefined` will be returned.<br>If no input is provided at all, a `TypeError` will be thrown.\n\n#### req\nType: `IncomingMessage` or `Object`\n\nThe incoming HTTP request (`req`) or a plain `Object` with a `url` key.\n\n> **Note:** In Node.js servers, the [`req.url`](https://nodejs.org/api/http.html#http_message_url) begins with a pathname & does not include a `hash`.\n\n#### toDecode\nType: `Boolean`<br>\nDefault: `false`\n\nIf enabled, the `url` will be fully decoded (via [`decodeURIComponent`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent)) and the output keys will be slightly different:\n\n* `path`, `pathname`, `href`, `_raw` &mdash; will be the decoded strings\n* `search` &mdash; if there is a value, will be decoded string, else remain `null`\n* `query` &mdash; if there is a value, will be a decoded **object**, else remain `null`\n\nAdditionally, the `req` is mutated with `req._decoded = true` so as to prevent repetitive decoding.\n\n\n## Benchmarks\n\nCheck out the [`bench`](/bench) directory for in-depth benchmark results and comparisons.\n\n\n## Support\n\nAny issues or questions can be sent to the [Polka][polka] repository.<br>However, please specify that your inquiry is about `@polka/url` specifically.\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n\n[polka]: https://github.com/lukeed/polka\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/lukeed/polka/issues"},"homepage":"https://github.com/lukeed/polka#readme","_id":"@polka/url@1.0.0-next.3","_nodeVersion":"10.13.0","_npmVersion":"lerna/3.13.4/node@v10.13.0+x64 (darwin)","dist":{"integrity":"sha512-Uom7l6OeP6vcf85lMImelYu5WKVWjXyhkpi9WsRdRzlJFJFPVhjBtBCktgDUj7dk1N5FURUdegSZ5XOjxf8JZg==","shasum":"7a56e747ec94622e8513b406c53cc1729799de09","tarball":"https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.3.tgz","fileCount":5,"unpackedSize":6658,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcyzcsCRA9TVsSAnZWagAAacAP/1I/Dl4z34fciO6y8Mar\nYlpSkCnbTQWXxjzv/7QpCzw2X9LhoxkyxCo2Th+eRtoygC6mmCUfXCsmgwtA\n1/F2mbF36ZXr1lYdsWXmjxupECXlE76WibaExMaOv1trjSdBWGoEgbHbt//C\nmVjKMP+P78akwqZeqkBjPKn/aZZsZorwmx00qLRHB64jx7IqkQoCMcASAjPi\nU8o0XSsyolMC0X02dZS7RpVaQLAAvtYQ6RwdpBRbS+mhhtR4HH8s+Tv+Eg02\nUBEfey/mCrmTQowNMe9I9IWF0grMcBHcbynhDTVs6ccdl3ood26SA3t4dpzK\nM+YNxxi7bHVzzaopb1ZyXX7wRbGXZkrL9lu5+UMbATbPq6Plv9F1c/PhudYE\nBr2jR3dT8tO72eZbym5z+mSKi7E1A+3lDV6ax4sxCoywt4dLB8v7I3/xuQxL\n1PczpGddNKTAWre10cGBJG/vllyCznFhnm2O5cnu+3wCTicxnueawIJHObn9\nOzTHf6rNr1D48/PRQFw/CUe5PgMmhaZ1Ygvc5YWNSGjAXJZy0p0/ZiIRN8ZF\nkav9cZSwviopns69Q84GCqYUxra/eTFXe/QUyUnVvK3R5pHai4/JlsVZFecV\npqCej8tGaSRGVnYg0bhdXBXxBxO7sgXyA3lR7nkKNmXPkwf2owmtf/YXU9dU\nDrZd\r\n=bvgj\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDQuW2UcFI5XMFL8rUVE1vn+cmuWfMD9Fi/ZKTuEJmnrQIgKN3ekL5lCvWzLrxD46fzqXhXH5cMd5ZU8fo6VkwUCQs="}]},"maintainers":[{"name":"lukeed","email":"luke@lukeed.com"}],"_npmUser":{"name":"lukeed","email":"luke@lukeed.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/url_1.0.0-next.3_1556821803783_0.8318355489629763"},"_hasShrinkwrap":false},"1.0.0-next.7":{"version":"1.0.0-next.7","name":"@polka/url","repository":{"type":"git","url":"git+https://github.com/lukeed/polka.git"},"description":"Super fast, memoized `req.url` parser","module":"build.mjs","main":"build.js","license":"MIT","author":{"name":"Luke Edwards","email":"luke@lukeed.com","url":"https://lukeed.com"},"publishConfig":{"access":"public"},"gitHead":"60d0e15ad0fa36b0331fc5e4707dd409982f9824","readme":"# @polka/url [![npm](https://badgen.now.sh/npm/v/@polka/url)](https://npmjs.org/package/@polka/url)\n\n> Super fast, memoized `req.url` parser; _not_ limited to [Polka][polka]!\n\nParses the `url` from a [`IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) request. The returned object will always only contain the following keys: `search`, `query`, `pathname`, `path`, `href`, and `_raw`.\n\n> **Note:** This library does not process `protocol`, `hostname`, `port`, etc.<br>This is because the incoming `req.url` value only begins with the path information.\n\nParsed requests will be mutated with a `_parsedUrl` key, containing the returned output. This is used for future memoization, so as to avoid parsing the same `url` value multiple times.\n\n## Install\n\n```\n$ npm install --save @polka/url\n```\n\n## Usage\n\n```js\nconst parse = require('@polka/url');\n\nlet req = { url: '/foo/bar?fizz=buzz' };\nlet foo = parse(req);\n//=> { search: '?fizz=buzz',\n//=>   query: 'fizz=buzz',\n//=>   pathname: '/foo/bar',\n//=>   path: '/foo/bar?fizz=buzz',\n//=>   href: '/foo/bar?fizz=buzz',\n//=>   _raw: '/foo/bar?fizz=buzz' }\n\n// Attaches result for future memoization\nassert.deepEqual(foo, req._parsedUrl); //=> true\n\n// Example with `toDecode` param\nreq = { url: '/f%C3%B8%C3%B8%C3%9F%E2%88%82r?phone=%2b8675309' };\nparse(req, true);\n//=> { search: '?phone=+8675309',\n//=>   query: { phone: '+8675309' },\n//=>   pathname: '/føøß∂r',\n//=>   path: '/føøß∂r?phone=+8675309',\n//=>   href: '/føøß∂r?phone=+8675309',\n//=>   _raw: '/føøß∂r?phone=+8675309' }\n\n// Attaches awareness key\nassert(req._decoded); //=> true\n```\n\n## API\n\n### url(req, toDecode)\nReturns: `Object` or `undefined`\n\n> **Important:** The `req` must have a `url` key, otherwise `undefined` will be returned.<br>If no input is provided at all, a `TypeError` will be thrown.\n\n#### req\nType: `IncomingMessage` or `Object`\n\nThe incoming HTTP request (`req`) or a plain `Object` with a `url` key.\n\n> **Note:** In Node.js servers, the [`req.url`](https://nodejs.org/api/http.html#http_message_url) begins with a pathname & does not include a `hash`.\n\n#### toDecode\nType: `Boolean`<br>\nDefault: `false`\n\nIf enabled, the `url` will be fully decoded (via [`decodeURIComponent`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent)) and the output keys will be slightly different:\n\n* `path`, `pathname`, `href`, `_raw` &mdash; will be the decoded strings\n* `search` &mdash; if there is a value, will be decoded string, else remain `null`\n* `query` &mdash; if there is a value, will be a decoded **object**, else remain `null`\n\nAdditionally, the `req` is mutated with `req._decoded = true` so as to prevent repetitive decoding.\n\n\n## Benchmarks\n\nCheck out the [`bench`](/bench) directory for in-depth benchmark results and comparisons.\n\n\n## Support\n\nAny issues or questions can be sent to the [Polka][polka] repository.<br>However, please specify that your inquiry is about `@polka/url` specifically.\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n\n[polka]: https://github.com/lukeed/polka\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/lukeed/polka/issues"},"homepage":"https://github.com/lukeed/polka#readme","_id":"@polka/url@1.0.0-next.7","_nodeVersion":"12.13.0","_npmVersion":"lerna/3.13.4/node@v12.13.0+x64 (darwin)","dist":{"integrity":"sha512-DOQhemlNfLQ7FZ6gdThARbeIjfhdM5fIqoPtgOJkO27r8A4njwiQSqx+qbReuIHEtx3fJyjSn2spMnsAHc0rFQ==","shasum":"e0f307ab768b799aa8668343ce0df6601f29b9b1","tarball":"https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.7.tgz","fileCount":5,"unpackedSize":6648,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdt9tWCRA9TVsSAnZWagAAnLkQAJqVkZYcfU6OJMOKRUQ0\nUVg/xVdw3xjs7CXB+qXzT9+5v4YInnmcS7pURfftuY809Yp/Wmx4tyN2zHnw\naFaOOPFhIsBSoSlV78kj7UcHKIF6o+QxScHmu0JFn7TEBSmX+1vt3ts40j/1\nl64lubemgoBINSfDy6xpcrkG3suEiM5+mPtCSbM6rZ87trs76Chjnn3ngSFT\ncAIVQfJGcI7jWNpxhQJgiP8YX5QmJIQjNCjmTXHF6lCGJrxEVdQYbl/6RzP8\nT60gQWYtUrem6CM0yYTzKTJHIAv+6dHNhSBrQguV10fyvv+g6uTPxRlMSH0p\nb3YZvWooT4WQ8Hx1FiWbDSMoCtV9wKK5tx0t07J68s2tUh17/QwdGhfPx8Xc\nf23HyejP7H3G1ue28QKsdvskvq3MaeTOSoH7cLMfe30C+qxD+U3zjCGaa9G0\nXUSMFax/vaSOHh8+xH67CC5DPByp8Gyfv1IVlkwxuyrEfHj8hId3UijfIQGC\nyil4uGCuV1zzW+qko4sJlDwMC8KzrVO6U/jQumf4Xt6BQ7zB8H3aI007kkz2\nBxx0MzgcKQgAeZXifapsxj43u9WRC5u4Y9c8VvW87bRBlkuKfPVimQjArwLf\nCRtpkFMohMIkM1Jd9fEeqxE22+1bL/w0YA21+T37FTyvpU5J8c6sK2ElIgQ0\nb/Nt\r\n=CcA9\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHDN3ewIwFIAHSqjTW3+ZchhdFUerzkiVxHI10NWb52CAiEA2OczEIfzWqe+a5+EWN6mJuRRuM/0aJV6piuyASRq8Io="}]},"maintainers":[{"name":"lukeed","email":"luke@lukeed.com"}],"_npmUser":{"name":"lukeed","email":"luke@lukeed.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/url_1.0.0-next.7_1572330326201_0.6811849546971962"},"_hasShrinkwrap":false},"1.0.0-next.9":{"version":"1.0.0-next.9","name":"@polka/url","repository":{"type":"git","url":"git+https://github.com/lukeed/polka.git"},"description":"Super fast, memoized `req.url` parser","module":"build.mjs","main":"build.js","license":"MIT","author":{"name":"Luke Edwards","email":"luke@lukeed.com","url":"https://lukeed.com"},"publishConfig":{"access":"public"},"gitHead":"5c8f314e57c1edb3132f2556ce13fb6c2b4e839b","readme":"# @polka/url [![npm](https://badgen.now.sh/npm/v/@polka/url)](https://npmjs.org/package/@polka/url)\n\n> Super fast, memoized `req.url` parser; _not_ limited to [Polka][polka]!\n\nParses the `url` from a [`IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) request. The returned object will always only contain the following keys: `search`, `query`, `pathname`, `path`, `href`, and `_raw`.\n\n> **Note:** This library does not process `protocol`, `hostname`, `port`, etc.<br>This is because the incoming `req.url` value only begins with the path information.\n\nParsed requests will be mutated with a `_parsedUrl` key, containing the returned output. This is used for future memoization, so as to avoid parsing the same `url` value multiple times.\n\n## Install\n\n```\n$ npm install --save @polka/url\n```\n\n## Usage\n\n```js\nconst parse = require('@polka/url');\n\nlet req = { url: '/foo/bar?fizz=buzz' };\nlet foo = parse(req);\n//=> { search: '?fizz=buzz',\n//=>   query: 'fizz=buzz',\n//=>   pathname: '/foo/bar',\n//=>   path: '/foo/bar?fizz=buzz',\n//=>   href: '/foo/bar?fizz=buzz',\n//=>   _raw: '/foo/bar?fizz=buzz' }\n\n// Attaches result for future memoization\nassert.deepEqual(foo, req._parsedUrl); //=> true\n\n// Example with `toDecode` param\nreq = { url: '/f%C3%B8%C3%B8%C3%9F%E2%88%82r?phone=%2b8675309' };\nparse(req, true);\n//=> { search: '?phone=+8675309',\n//=>   query: { phone: '+8675309' },\n//=>   pathname: '/føøß∂r',\n//=>   path: '/føøß∂r?phone=+8675309',\n//=>   href: '/føøß∂r?phone=+8675309',\n//=>   _raw: '/føøß∂r?phone=+8675309' }\n\n// Attaches awareness key\nassert(req._decoded); //=> true\n```\n\n## API\n\n### url(req, toDecode)\nReturns: `Object` or `undefined`\n\n> **Important:** The `req` must have a `url` key, otherwise `undefined` will be returned.<br>If no input is provided at all, a `TypeError` will be thrown.\n\n#### req\nType: `IncomingMessage` or `Object`\n\nThe incoming HTTP request (`req`) or a plain `Object` with a `url` key.\n\n> **Note:** In Node.js servers, the [`req.url`](https://nodejs.org/api/http.html#http_message_url) begins with a pathname & does not include a `hash`.\n\n#### toDecode\nType: `Boolean`<br>\nDefault: `false`\n\nIf enabled, the `url` will be fully decoded (via [`decodeURIComponent`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent)) and the output keys will be slightly different:\n\n* `path`, `pathname`, `href`, `_raw` &mdash; will be the decoded strings\n* `search` &mdash; if there is a value, will be decoded string, else remain `null`\n* `query` &mdash; if there is a value, will be a decoded **object**, else remain `null`\n\nAdditionally, the `req` is mutated with `req._decoded = true` so as to prevent repetitive decoding.\n\n\n## Benchmarks\n\nCheck out the [`bench`](/bench) directory for in-depth benchmark results and comparisons.\n\n\n## Support\n\nAny issues or questions can be sent to the [Polka][polka] repository.<br>However, please specify that your inquiry is about `@polka/url` specifically.\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n\n[polka]: https://github.com/lukeed/polka\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/lukeed/polka/issues"},"homepage":"https://github.com/lukeed/polka#readme","_id":"@polka/url@1.0.0-next.9","_nodeVersion":"10.13.0","_npmVersion":"lerna/3.13.4/node@v10.13.0+x64 (darwin)","dist":{"integrity":"sha512-VZqSaulg2kVQYMulmuZcvapPwH5/y81YHANiFIKz1GNZoG/F4o1JSeLlrvXJ8tC+RPUjxdrebfT3Qn+bnMi0bA==","shasum":"9abddbf31c15548f9615a3275f66ac5c100f296d","tarball":"https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.9.tgz","fileCount":5,"unpackedSize":6770,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd1f/nCRA9TVsSAnZWagAAle0QAJ3Ic+nYfJHilvuCtShD\nqpWcbRka4iVatmuATxSPUFUpXDIakWJvMLJ60eB/z/I0rHYpyTnLYR+9dd8p\ntrg3INJ+Yk9btKU3l+XLXwjSapB+9pF6aGLta5qBI5Idfaq3gG5V+ptkoQ0j\nz9sOYYwva73aaV6TZvImh65AflaVLM1YJDG17qOphOEXRtlTT5u6Ah8jQRmY\na2nDbyQtL2/Zthxy2Uzo40+eemlaK/7O872ZDRI48V2GXOIkTR/zVXvXHBDc\ncHCKJt0OM1XKTp7tD09j5j5ql0P0qi99+npFIpBISefQsjpqwDh4ufHhdt2M\nrO6CpCAXtXFnB6kcNokP8QrfyLUJUx0kOn1/wPLXmItmvDsf4BjTIdOn3h7l\n75pcDAkfQLDnTYbb5CUWFr0+tBItZEd6pTgKS6qjnYcfxhgwUuBblXo5pQbI\n4viQmnvI0z/J+sY4juP3SutrtBydDEoGEHlGw1PYjSIgIyWiJY4ixEdn7fzp\nbgoGcCDOzNa8PvKe8FMDaP3eCYg9XLtDfA/KBag3+RCTk/cTK+hTMjN8tu4P\ny5dgboYELLmWzDJVh1UG9yUcihpgWnqI5yarTPEO/kkaVn1dQfEVNvY7kXid\nIZzw2NuahqVLnVegp8HRE1SnRY4ca4E8D5ndQHGmavVU58q+6kHKol0sxu10\n8rFk\r\n=oJu9\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICoi3YEUY1ehUgQ44hPmgfn58lVIjiR+c4Z7EKJFkwBJAiBYrggsY+PQ+fpUfGH/+M2KIDxenRtAO6aP7lZKE8JdQg=="}]},"maintainers":[{"name":"lukeed","email":"luke@lukeed.com"}],"_npmUser":{"name":"lukeed","email":"luke@lukeed.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/url_1.0.0-next.9_1574305767226_0.5120056792889136"},"_hasShrinkwrap":false},"1.0.0-next.11":{"version":"1.0.0-next.11","name":"@polka/url","repository":{"type":"git","url":"git+https://github.com/lukeed/polka.git"},"description":"Super fast, memoized `req.url` parser","module":"build.mjs","main":"build.js","license":"MIT","author":{"name":"Luke Edwards","email":"luke@lukeed.com","url":"https://lukeed.com"},"publishConfig":{"access":"public"},"gitHead":"4edc74c28fde992eb10e23a6f6f4fd6040ccb34a","readme":"# @polka/url [![npm](https://badgen.now.sh/npm/v/@polka/url)](https://npmjs.org/package/@polka/url)\n\n> Super fast, memoized `req.url` parser; _not_ limited to [Polka][polka]!\n\nParses the `url` from a [`IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) request. The returned object will always only contain the following keys: `search`, `query`, `pathname`, `path`, `href`, and `_raw`.\n\n> **Note:** This library does not process `protocol`, `hostname`, `port`, etc.<br>This is because the incoming `req.url` value only begins with the path information.\n\nParsed requests will be mutated with a `_parsedUrl` key, containing the returned output. This is used for future memoization, so as to avoid parsing the same `url` value multiple times.\n\n## Install\n\n```\n$ npm install --save @polka/url\n```\n\n## Usage\n\n```js\nconst parse = require('@polka/url');\n\nlet req = { url: '/foo/bar?fizz=buzz' };\nlet foo = parse(req);\n//=> { search: '?fizz=buzz',\n//=>   query: 'fizz=buzz',\n//=>   pathname: '/foo/bar',\n//=>   path: '/foo/bar?fizz=buzz',\n//=>   href: '/foo/bar?fizz=buzz',\n//=>   _raw: '/foo/bar?fizz=buzz' }\n\n// Attaches result for future memoization\nassert.deepEqual(foo, req._parsedUrl); //=> true\n\n// Example with `toDecode` param\nreq = { url: '/f%C3%B8%C3%B8%C3%9F%E2%88%82r?phone=%2b8675309' };\nparse(req, true);\n//=> { search: '?phone=+8675309',\n//=>   query: { phone: '+8675309' },\n//=>   pathname: '/føøß∂r',\n//=>   path: '/føøß∂r?phone=+8675309',\n//=>   href: '/føøß∂r?phone=+8675309',\n//=>   _raw: '/føøß∂r?phone=+8675309' }\n\n// Attaches awareness key\nassert(req._decoded); //=> true\n```\n\n## API\n\n### url(req, toDecode)\nReturns: `Object` or `undefined`\n\n> **Important:** The `req` must have a `url` key, otherwise `undefined` will be returned.<br>If no input is provided at all, a `TypeError` will be thrown.\n\n#### req\nType: `IncomingMessage` or `Object`\n\nThe incoming HTTP request (`req`) or a plain `Object` with a `url` key.\n\n> **Note:** In Node.js servers, the [`req.url`](https://nodejs.org/api/http.html#http_message_url) begins with a pathname & does not include a `hash`.\n\n#### toDecode\nType: `Boolean`<br>\nDefault: `false`\n\nIf enabled, the `url` will be fully decoded (via [`decodeURIComponent`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent)) and the output keys will be slightly different:\n\n* `path`, `pathname`, `href`, `_raw` &mdash; will be the decoded strings\n* `search` &mdash; if there is a value, will be decoded string, else remain `null`\n* `query` &mdash; if there is a value, will be a decoded **object**, else remain `null`\n\nAdditionally, the `req` is mutated with `req._decoded = true` so as to prevent repetitive decoding.\n\n\n## Benchmarks\n\nCheck out the [`bench`](/bench) directory for in-depth benchmark results and comparisons.\n\n\n## Support\n\nAny issues or questions can be sent to the [Polka][polka] repository.<br>However, please specify that your inquiry is about `@polka/url` specifically.\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n\n[polka]: https://github.com/lukeed/polka\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/lukeed/polka/issues"},"homepage":"https://github.com/lukeed/polka#readme","_id":"@polka/url@1.0.0-next.11","_nodeVersion":"10.13.0","_npmVersion":"lerna/3.13.4/node@v10.13.0+x64 (darwin)","dist":{"integrity":"sha512-3NsZsJIA/22P3QUyrEDNA2D133H4j224twJrdipXN38dpnIOzAbUDtOwkcJ5pXmn75w7LSQDjA4tO9dm1XlqlA==","shasum":"aeb16f50649a91af79dbe36574b66d0f9e4d9f71","tarball":"https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.11.tgz","fileCount":5,"unpackedSize":6953,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeHIN2CRA9TVsSAnZWagAAPYgP/R6FHMunm/xNwk6D/XY6\nIJmkhlqywyIETLSBpkEP83B7CcXlWR0ITO8Veqo1xfDRqCvpHf4n1BWSvK9x\nIj4zyXBQLLGn4Ee3em05CHgAAzZD79BrBMYkhviVVpN9BtAo/fDNW41CUeI6\nNPuSKXZDjklTZO6GGR0XsRMuBX2I0zK4kQ3pw4a9JpffDcVnL40PpvFPFqvR\nTe0nLhMAR7dtwv0eHJF/xrmCGbGo6Dh8vpixEwAE3npX6ITR0RLxI6kMUPsX\npEhIx6terN1TmvfKHBCuimubvlKlP0W2GozNi6xMSGs6g5HzLVaqigjcI0zC\nLL1Rkk7zNZG4JYS8aOKyz+ca/AwhzBrU5nNpH/Cg7DHitwnFlgHLDJ7mzZHY\n6GIzWHXRf0VUhFG4iL8nJ+tKcBLaTvwDToj3CzfaO19XxgPW2mX4eoIL5Wxt\nZ2lRdj1BVAjlX2+NrRXjyXxbFl3+oSbjIXTu6FXZ30yytKSbkdhH4H8Lk/lf\nyMhblkMeThrNNm3J2QyybFCKrCWqJu80Zd/RByBIMLqMt3rnSBigYfgJ/mv+\nxjjRoJGRmjygyb60D4g1jANguQllBgk485U4ohTX9wLbBBpSwmWDwqBvMWKb\nUq4eU9mSZPEFE69gXnQ2HO3vjfDdzcRAxngD0aNJhkg6hZnFMajg6ASP5w0P\nJwGM\r\n=3A5B\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDMvc3jxgDEgEMG9TOjvW0Hitp+4gjifR7K9c3jCk9N8QIhAObVb5X1uI1OdbWK/eMJ5TlwteDYnFLlfs38LnGgZxxp"}]},"maintainers":[{"name":"lukeed","email":"luke@lukeed.com"}],"_npmUser":{"name":"lukeed","email":"luke@lukeed.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/url_1.0.0-next.11_1578926966458_0.631422984402525"},"_hasShrinkwrap":false},"1.0.0-next.12":{"version":"1.0.0-next.12","name":"@polka/url","repository":{"type":"git","url":"git+https://github.com/lukeed/polka.git"},"description":"Super fast, memoized `req.url` parser","module":"build.mjs","types":"index.d.ts","main":"build.js","license":"MIT","author":{"name":"Luke Edwards","email":"luke@lukeed.com","url":"https://lukeed.com"},"publishConfig":{"access":"public"},"gitHead":"dc4a3c4b677dda9d38386299e83e84a3220e49c9","readme":"# @polka/url [![npm](https://badgen.now.sh/npm/v/@polka/url)](https://npmjs.org/package/@polka/url)\n\n> Super fast, memoized `req.url` parser; _not_ limited to [Polka][polka]!\n\nParses the `url` from a [`IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) request. The returned object will always only contain the following keys: `search`, `query`, `pathname`, `path`, `href`, and `_raw`.\n\n> **Note:** This library does not process `protocol`, `hostname`, `port`, etc.<br>This is because the incoming `req.url` value only begins with the path information.\n\nParsed requests will be mutated with a `_parsedUrl` key, containing the returned output. This is used for future memoization, so as to avoid parsing the same `url` value multiple times.\n\n## Install\n\n```\n$ npm install --save @polka/url\n```\n\n## Usage\n\n```js\nconst parse = require('@polka/url');\n\nlet req = { url: '/foo/bar?fizz=buzz' };\nlet foo = parse(req);\n//=> { search: '?fizz=buzz',\n//=>   query: 'fizz=buzz',\n//=>   pathname: '/foo/bar',\n//=>   path: '/foo/bar?fizz=buzz',\n//=>   href: '/foo/bar?fizz=buzz',\n//=>   _raw: '/foo/bar?fizz=buzz' }\n\n// Attaches result for future memoization\nassert.deepEqual(foo, req._parsedUrl); //=> true\n\n// Example with `toDecode` param\nreq = { url: '/f%C3%B8%C3%B8%C3%9F%E2%88%82r?phone=%2b8675309' };\nparse(req, true);\n//=> { search: '?phone=+8675309',\n//=>   query: { phone: '+8675309' },\n//=>   pathname: '/føøß∂r',\n//=>   path: '/føøß∂r?phone=+8675309',\n//=>   href: '/føøß∂r?phone=+8675309',\n//=>   _raw: '/føøß∂r?phone=+8675309' }\n\n// Attaches awareness key\nassert(req._decoded); //=> true\n```\n\n## API\n\n### url(req, toDecode)\nReturns: `Object` or `undefined`\n\n> **Important:** The `req` must have a `url` key, otherwise `undefined` will be returned.<br>If no input is provided at all, a `TypeError` will be thrown.\n\n#### req\nType: `IncomingMessage` or `Object`\n\nThe incoming HTTP request (`req`) or a plain `Object` with a `url` key.\n\n> **Note:** In Node.js servers, the [`req.url`](https://nodejs.org/api/http.html#http_message_url) begins with a pathname & does not include a `hash`.\n\n#### toDecode\nType: `Boolean`<br>\nDefault: `false`\n\nIf enabled, the `url` will be fully decoded (via [`decodeURIComponent`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent)) and the output keys will be slightly different:\n\n* `path`, `pathname`, `href`, `_raw` &mdash; will be the decoded strings\n* `search` &mdash; if there is a value, will be decoded string, else remain `null`\n* `query` &mdash; if there is a value, will be a decoded **object**, else remain `null`\n\nAdditionally, the `req` is mutated with `req._decoded = true` so as to prevent repetitive decoding.\n\n\n## Benchmarks\n\nCheck out the [`bench`](/bench) directory for in-depth benchmark results and comparisons.\n\n\n## Support\n\nAny issues or questions can be sent to the [Polka][polka] repository.<br>However, please specify that your inquiry is about `@polka/url` specifically.\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n\n[polka]: https://github.com/lukeed/polka\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/lukeed/polka/issues"},"homepage":"https://github.com/lukeed/polka#readme","_id":"@polka/url@1.0.0-next.12","_nodeVersion":"14.15.3","_npmVersion":"lerna/3.13.4/node@v14.15.3+x64 (darwin)","dist":{"integrity":"sha512-6RglhutqrGFMO1MNUXp95RBuYIuc8wTnMAV5MUhLmjTOy78ncwOw7RgeQ/HeymkKXRhZd0s2DNrM1rL7unk3MQ==","shasum":"431ec342a7195622f86688bbda82e3166ce8cb28","tarball":"https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.12.tgz","fileCount":6,"unpackedSize":7296,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgYQD5CRA9TVsSAnZWagAAuVsP/1i4ug28Qen9hwiF2wSb\nyyk3LlbZXdLVi/kkGf3NAQNkMihWYmD0wZW4FSMlnCad/R9GdsBzZAwNOw8f\n9l4yqgm9TbYiRNDpIFaW+mVqFB/5bHkMGaP7OBba8F45x5QYi6jy5Qc4I+dA\n1LJgHhuW+mrkK2AqNi9H6rshTbHyCT0b6e82XvHREU8mQGhj5HNxZMeqwgt/\niMqE3umNtN3xb65KCG7h7GFSQko7owAUVFAWD/RuBmqh/QF5ukhYZD8hmGBS\nquxey2gn5DQ8nqOB24hUM0nqzUWWPu4Srnl/OLbl9Q/JYaGaVT3hT3rjRuYz\nbjqJCbpQJlQ61aP7iEZhHIeaSWxbazzFoo/mVdOBeMNuOv7hAx0+rHrCdx6h\nYmEMKx6NhXoCY5mCREjBT5PLrlEvY/TwgPLnoG49VRI98ZeblHVU3brnTqVL\n2kxOF5Aczva3LaxmEdgu795m0+o+R/NfuCKipF1NpUoGLzys1wYccvaCioQI\nOaenacsGF3GQio5WXl0DQfzpzy350Y4Q3LKq2TVbKgZ0EWufrVdaBe+8ONPL\nHx18/cM4WAyQbHlEafTGwQHeL9UfSdWaWAXmFWagDkDuukq73wata+C0dS3D\nC4ZymG9sY/m7oW78LFOjeGqCStK+mwkAz6PWs0oWXog9iQo9rPH6+zvETFUR\n5S6d\r\n=I42H\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDcZlQwujEY7L6MgZyJ60ZVojylNj0mkBaRYSVCMBeFKAiBc4P5wpC+9T7eGgP/w3Gr8LUb4SM6JEa9uZbPPDqZv6Q=="}]},"_npmUser":{"name":"lukeed","email":"luke@lukeed.com"},"directories":{},"maintainers":[{"name":"lukeed","email":"luke@lukeed.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/url_1.0.0-next.12_1616969976995_0.6621106504371705"},"_hasShrinkwrap":false},"1.0.0-next.15":{"version":"1.0.0-next.15","name":"@polka/url","repository":{"type":"git","url":"git+https://github.com/lukeed/polka.git"},"description":"Super fast, memoized `req.url` parser","module":"build.mjs","types":"index.d.ts","main":"build.js","license":"MIT","exports":{".":{"import":"./build.mjs","require":"./build.js"},"./package.json":"./package.json"},"author":{"name":"Luke Edwards","email":"luke@lukeed.com","url":"https://lukeed.com"},"publishConfig":{"access":"public"},"gitHead":"e0e131dd28b03e26652a96b9a1428c017209e187","readme":"# @polka/url [![npm](https://badgen.now.sh/npm/v/@polka/url)](https://npmjs.org/package/@polka/url)\n\n> Super fast, memoized `req.url` parser; _not_ limited to [Polka][polka]!\n\nParses the `url` from a [`IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) request. The returned object will always only contain the following keys: `search`, `query`, `pathname`, and `raw`.\n\n> **Note:** This library does not process `protocol`, `hostname`, `port`, etc.<br>This is because the incoming `req.url` value only begins with the path information.\n\nParsed requests will be mutated with a `_parsedUrl` key, containing the returned output. This is used for future memoization, avoiding the need to fully parse the same `url` value multiple times.\n\n## Install\n\n```\n$ npm install --save @polka/url\n```\n\n## Usage\n\n```js\nconst parse = require('@polka/url');\n\nlet req = {\n  url: '/foo/bar?fizz=buzz'\n};\nlet output = parse(req);\n//=> {\n//=>   pathname: '/foo/bar',\n//=>   raw: '/foo/bar?fizz=buzz',\n//=>   search: '?fizz=buzz',\n//=>   query: {\n//=>     fizz: 'buzz'\n//=>   },\n//=> }\n\n// Attaches result for future memoization\nassert.deepEqual(output, req._parsedUrl); //=> true\n\n// Example with `toDecode` param\nreq = {\n  url: '/f%C3%B8%C3%B8%C3%9F%E2%88%82r?phone=%2b8675309'\n};\nparse(req, true);\n//=> {\n//=>   pathname: '/føøß∂r',\n//=>   raw: '/f%C3%B8%C3%B8%C3%9F%E2%88%82r?phone=%2b8675309',\n//=>   search: '?phone=%2b8675309',\n//=>   query: {\n//=>     phone: '+8675309'\n//=>   }\n//=> }\n\n// Attaches awareness key\nassert(req._decoded); //=> true\n```\n\n## API\n\n### url(req, toDecode?)\nReturns: `Object` or `undefined`\n\n> **Important:** The `req` must have a `url` key, otherwise `undefined` will be returned.<br>If no input is provided at all, a `TypeError` will be thrown.\n\n#### req\nType: `IncomingMessage` or `{ url: string }`\n\nThe incoming HTTP request (`req`) or a plain `Object` with a `url` key.\n\n> **Note:** In Node.js servers, the [`req.url`](https://nodejs.org/api/http.html#http_message_url) begins with a pathname & does not include a `hash`.\n\n#### toDecode\nType: `Boolean`<br>\nDefault: `false`\n\nIf enabled, the `pathname` will be fully decoded, via [`decodeURIComponent`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent).\n\n> **Important:** Please note the following behaviors:\n> * `raw` is _never_ decoded; this key reflects your original value\n> * `pathname` is decoded _only_ when `toDecode` is enabled\n> * `search` is _never_ decoded; this key reflects your original querystring value\n> * `query` is _always_ decoded; even when `toDecode` is disabled\n\nAdditionally, the `req` is mutated with `req._decoded = true` so as to prevent repetitive decoding.\n\n\n## Benchmarks\n\nCheck out the [`bench`](/bench) directory for in-depth benchmark results and comparisons.\n\n\n## Support\n\nAny issues or questions can be sent to the [Polka][polka] repository.<br>However, please specify that your inquiry is about `@polka/url` specifically.\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n\n[polka]: https://github.com/lukeed/polka\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/lukeed/polka/issues"},"homepage":"https://github.com/lukeed/polka#readme","_id":"@polka/url@1.0.0-next.15","_nodeVersion":"14.15.3","_npmVersion":"lerna/3.13.4/node@v14.15.3+x64 (darwin)","dist":{"integrity":"sha512-15spi3V28QdevleWBNXE4pIls3nFZmBbUGrW9IVPwiQczuSb9n76TCB4bsk8TSel+I1OkHEdPhu5QKMfY6rQHA==","shasum":"6a9d143f7f4f49db2d782f9e1c8839a29b43ae23","tarball":"https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.15.tgz","fileCount":6,"unpackedSize":7198,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgrCIlCRA9TVsSAnZWagAAGYcP/RfR9OvhVwDRvwapCpZi\nD6rrAtxaZvsxMc7CokZckGkEd/8Zt0b1U8d6w0s62T6qeQbD71BLbGT+uxda\nRm3hs0Ga7Bug+BdI6Hp6HlRmhmyeYceSW2QDoNz/ENiEL9G8PfuTe+dlwVBL\njU+JiVzgoGCPyeUP+/5BlVHQnorWl0Fkeq3PlJIES3Adu5J4yui8mNPBIe0/\nYMcRUOwqlydsxwNrWgXtdHgjkdxVIP+V+e+R8QBPhrint42oVWCXpiZXyfUM\niBH2oF7hWDB51oEFT+YaEc8hxhyoGoWHcCeWwBS2PvpRls1ASzIkkZ+SIZ/X\nAaYO+xeK5ZIbaZzgNqVhqV355K0KKJyeqMtptm8VCulVaX+/IcxVgxr3omDx\nqkbfDobeqDMry0xpoCjk8DVfgWjZSyv+yfjXPHXV/bS0YbG/YzRNF0o4gggk\nsOGOEdzfdwFvZZzmdKWROWGtlG/Mr4eSebhRquAoKhWO4+X2fIR9vm1qcgAs\nWtqw3juuAWGMCpYOnNJZuFDyO1GACnw6sivaWeCQ8m03Rucn3PoysHd87fWL\nx4asmVHbRJMu/Jvdw2y0o09/ciOE/Z9MDJHc6d2GhmzFpOAKG58QEBHeIwb+\nZZ47Rdii4Z9yTqSeP+F6DNR/FXYklZx7Hnzp5MHAcj2l6OamiI+K+12dJ/sh\nLqdg\r\n=dD5Y\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCRapcZ2xdvG2s78vTB5dYhPhtYt5PvCgfQf2pA+lkzGgIhAP74QFhhxX0gClU7X2aRJ+P6DCdk3DRonjbldYiZXda+"}]},"_npmUser":{"name":"lukeed","email":"luke@lukeed.com"},"directories":{},"maintainers":[{"name":"lukeed","email":"luke@lukeed.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/url_1.0.0-next.15_1621893668932_0.40685878213468585"},"_hasShrinkwrap":false},"1.0.0-next.17":{"version":"1.0.0-next.17","name":"@polka/url","repository":{"type":"git","url":"git+https://github.com/lukeed/polka.git"},"description":"Super fast, memoized `req.url` parser","module":"build.mjs","types":"index.d.ts","main":"build.js","license":"MIT","exports":{".":{"import":"./build.mjs","require":"./build.js"},"./package.json":"./package.json"},"author":{"name":"Luke Edwards","email":"luke@lukeed.com","url":"https://lukeed.com"},"publishConfig":{"access":"public"},"gitHead":"e0a65c781b763f7421f1a64d4166b3911f4d20e9","readme":"# @polka/url [![npm](https://badgen.now.sh/npm/v/@polka/url)](https://npmjs.org/package/@polka/url)\n\n> Super fast, memoized `req.url` parser; _not_ limited to [Polka][polka]!\n\nParses the `url` from a [`IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) request. The returned object will always only contain the following keys: `search`, `query`, `pathname`, and `raw`.\n\n> **Note:** This library does not process `protocol`, `hostname`, `port`, etc.<br>This is because the incoming `req.url` value only begins with the path information.\n\nParsed requests will be mutated with a `_parsedUrl` key, containing the returned output. This is used for future memoization, avoiding the need to fully parse the same `url` value multiple times.\n\n## Install\n\n```\n$ npm install --save @polka/url\n```\n\n## Usage\n\n```js\nconst parse = require('@polka/url');\n\nlet req = {\n  url: '/foo/bar?fizz=buzz'\n};\nlet output = parse(req);\n//=> {\n//=>   pathname: '/foo/bar',\n//=>   raw: '/foo/bar?fizz=buzz',\n//=>   search: '?fizz=buzz',\n//=>   query: {\n//=>     fizz: 'buzz'\n//=>   },\n//=> }\n\n// Attaches result for future memoization\nassert.deepEqual(output, req._parsedUrl); //=> true\n\n// Example with `toDecode` param\nreq = {\n  url: '/f%C3%B8%C3%B8%C3%9F%E2%88%82r?phone=%2b8675309'\n};\nparse(req, true);\n//=> {\n//=>   pathname: '/føøß∂r',\n//=>   raw: '/f%C3%B8%C3%B8%C3%9F%E2%88%82r?phone=%2b8675309',\n//=>   search: '?phone=%2b8675309',\n//=>   query: {\n//=>     phone: '+8675309'\n//=>   }\n//=> }\n\n// Attaches awareness key\nassert(req._decoded); //=> true\n```\n\n## API\n\n### url(req, toDecode?)\nReturns: `Object` or `undefined`\n\n> **Important:** The `req` must have a `url` key, otherwise `undefined` will be returned.<br>If no input is provided at all, a `TypeError` will be thrown.\n\n#### req\nType: `IncomingMessage` or `{ url: string }`\n\nThe incoming HTTP request (`req`) or a plain `Object` with a `url` key.\n\n> **Note:** In Node.js servers, the [`req.url`](https://nodejs.org/api/http.html#http_message_url) begins with a pathname & does not include a `hash`.\n\n#### toDecode\nType: `Boolean`<br>\nDefault: `false`\n\nIf enabled, the `pathname` will be fully decoded, via [`decodeURIComponent`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent).\n\n> **Important:** Please note the following behaviors:\n> * `raw` is _never_ decoded; this key reflects your original value\n> * `pathname` is decoded _only_ when `toDecode` is enabled\n> * `search` is _never_ decoded; this key reflects your original querystring value\n> * `query` is _always_ decoded; even when `toDecode` is disabled\n\nAdditionally, the `req` is mutated with `req._decoded = true` so as to prevent repetitive decoding.\n\n\n## Benchmarks\n\nCheck out the [`bench`](/bench) directory for in-depth benchmark results and comparisons.\n\n\n## Support\n\nAny issues or questions can be sent to the [Polka][polka] repository.<br>However, please specify that your inquiry is about `@polka/url` specifically.\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n\n[polka]: https://github.com/lukeed/polka\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/lukeed/polka/issues"},"homepage":"https://github.com/lukeed/polka#readme","_id":"@polka/url@1.0.0-next.17","_nodeVersion":"14.15.3","_npmVersion":"lerna/3.13.4/node@v14.15.3+x64 (darwin)","dist":{"integrity":"sha512-0p1rCgM3LLbAdwBnc7gqgnvjHg9KpbhcSphergHShlkWz8EdPawoMJ3/VbezI0mGC5eKCDzMaPgF9Yca6cKvrg==","shasum":"25fdbdfd282c2f86ddf3fcefbd98be99cd2627e2","tarball":"https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.17.tgz","fileCount":6,"unpackedSize":7278,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhFw5JCRA9TVsSAnZWagAAFUUP+QC4PxGm8x6Rn/1jCyHt\nSIYuzb9BX+X/oy4DqsQquDtZd6JoaA9sUkqhQxFgGS4MxSIxVm/AIT4GLocx\nmRyvKkWyPacqPS6VX6tAA22/q0MftiIxi/7Wcq8Jy4i8HAcQaSTrLXSUCARa\nMze/Pre1pv8fU39ZrMfCLbyFFxxftZ8q4bwQMW7C3stAN29TyYYF1uFbcrtJ\nvXqT5prnuE+NYdRQWzcOgB1wKJkWhO5yXjIBDIGdNc8jaV+iRTHi0w04wznI\nurOATSZecKnJsEuOUXRTTRRPDOJyUt4WdxWjTAovkTJa9mjgHdrT2FYHwCHD\n7ZmhkjeEvMiYV7wRpTC6coMSPFNiCQilzVcflo0NIteOZ+d2PSfP1wJNjAIA\nDgDYvqQLhTYAcS6ZL6QN8MbQstS/P60iD1W8REk8h4SU5g5+T94Dtlas2HoK\nefu0IgaQUKXlnGv5xgTjdMixkYqcfJNhygL3MuXOchrWJVEO6k6+1kdbb+sA\n0BPFvD/s67afV8fCfr4A3IJVTiYKjcYA5tM3DklJiU+Wec2ojeM0Znx7WAoq\nFlSABVnZ3NKqB58CCZGZrNihr2d+BCimOpcRNT5muB40L5xUQcr7pBhhpxto\nPfRhjn7i0XqeVmOM4ILOht5BAaLeCyo6mDEMNirca7kTiDpQg5PwS8F5u/XI\nK15m\r\n=Ih4V\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCUQm9j+OfkONMEgAp8EF7x+RkW15YfEoL9p2GhQJ3kKgIgaNrRhB2s/ZTLn8qh+0xH3gDzVG7NNl+ukKv8ZB6XLXY="}]},"_npmUser":{"name":"lukeed","email":"luke@lukeed.com"},"directories":{},"maintainers":[{"name":"lukeed","email":"luke@lukeed.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/url_1.0.0-next.17_1628900937212_0.3294904345756555"},"_hasShrinkwrap":false},"1.0.0-next.18":{"version":"1.0.0-next.18","name":"@polka/url","repository":{"type":"git","url":"git+https://github.com/lukeed/polka.git"},"description":"Super fast, memoized `req.url` parser","module":"build.mjs","types":"index.d.ts","main":"build.js","license":"MIT","exports":{".":{"import":"./build.mjs","require":"./build.js"},"./package.json":"./package.json"},"author":{"name":"Luke Edwards","email":"luke@lukeed.com","url":"https://lukeed.com"},"publishConfig":{"access":"public"},"gitHead":"765e0b2e888f210b869e9584b31af6e876ccfdc4","readme":"# @polka/url [![npm](https://badgen.now.sh/npm/v/@polka/url)](https://npmjs.org/package/@polka/url)\n\n> Super fast, memoized `req.url` parser; _not_ limited to [Polka][polka]!\n\nParses the `url` from a [`IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) request. The returned object will always only contain the following keys: `search`, `query`, `pathname`, and `raw`.\n\n> **Note:** This library does not process `protocol`, `hostname`, `port`, etc.<br>This is because the incoming `req.url` value only begins with the path information.\n\nParsed requests will be mutated with a `_parsedUrl` key, containing the returned output. This is used for future memoization, avoiding the need to fully parse the same `url` value multiple times.\n\n## Install\n\n```\n$ npm install --save @polka/url\n```\n\n## Usage\n\n```js\nconst parse = require('@polka/url');\n\nlet req = {\n  url: '/foo/bar?fizz=buzz'\n};\nlet output = parse(req);\n//=> {\n//=>   pathname: '/foo/bar',\n//=>   raw: '/foo/bar?fizz=buzz',\n//=>   search: '?fizz=buzz',\n//=>   query: {\n//=>     fizz: 'buzz'\n//=>   },\n//=> }\n\n// Attaches result for future memoization\nassert.deepEqual(output, req._parsedUrl); //=> true\n\n// Example with `toDecode` param\nreq = {\n  url: '/f%C3%B8%C3%B8%C3%9F%E2%88%82r?phone=%2b8675309'\n};\nparse(req, true);\n//=> {\n//=>   pathname: '/føøß∂r',\n//=>   raw: '/f%C3%B8%C3%B8%C3%9F%E2%88%82r?phone=%2b8675309',\n//=>   search: '?phone=%2b8675309',\n//=>   query: {\n//=>     phone: '+8675309'\n//=>   }\n//=> }\n\n// Attaches awareness key\nassert(req._decoded); //=> true\n```\n\n## API\n\n### url(req, toDecode?)\nReturns: `Object` or `undefined`\n\n> **Important:** The `req` must have a `url` key, otherwise `undefined` will be returned.<br>If no input is provided at all, a `TypeError` will be thrown.\n\n#### req\nType: `IncomingMessage` or `{ url: string }`\n\nThe incoming HTTP request (`req`) or a plain `Object` with a `url` key.\n\n> **Note:** In Node.js servers, the [`req.url`](https://nodejs.org/api/http.html#http_message_url) begins with a pathname & does not include a `hash`.\n\n#### toDecode\nType: `Boolean`<br>\nDefault: `false`\n\nIf enabled, the `pathname` will be fully decoded, via [`decodeURIComponent`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent).\n\n> **Important:** Please note the following behaviors:\n> * `raw` is _never_ decoded; this key reflects your original value\n> * `pathname` is decoded _only_ when `toDecode` is enabled\n> * `search` is _never_ decoded; this key reflects your original querystring value\n> * `query` is _always_ decoded; even when `toDecode` is disabled\n\nAdditionally, the `req` is mutated with `req._decoded = true` so as to prevent repetitive decoding.\n\n\n## Benchmarks\n\nCheck out the [`bench`](/bench) directory for in-depth benchmark results and comparisons.\n\n\n## Support\n\nAny issues or questions can be sent to the [Polka][polka] repository.<br>However, please specify that your inquiry is about `@polka/url` specifically.\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n\n[polka]: https://github.com/lukeed/polka\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/lukeed/polka/issues"},"homepage":"https://github.com/lukeed/polka#readme","_id":"@polka/url@1.0.0-next.18","_nodeVersion":"16.6.2","_npmVersion":"lerna/3.13.4/node@v16.6.2+x64 (darwin)","dist":{"integrity":"sha512-rEAwa2i6cLiGROES86oNNsSV8DlXXnv34+G/e3lnEcmkP9Y2YVuEGcqv09dHQuvzQCDAqRGlJVjeqlawQb2qew==","shasum":"c8d8db7f3d38092c90ebc5e825c2c6b0cc5b1042","tarball":"https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.18.tgz","fileCount":6,"unpackedSize":7227,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhJwliCRA9TVsSAnZWagAA6psQAKTRr3uCeT1SiJWgW/6s\nl4yMsVyvHIsMK9CNeCdIboKn/71ziP/JfJdBcPWT0LXDjz8Wl3CIoOdUwqr4\nabjSJdZe4lmQyFrFExFct4qLKd6PLkUwjpiL7QPx2dJ19NHsFalIPL9IkuvE\nn/U58ciuTwGIDmtxHKzXWEYCwFcvOekDgj8cFidwhHsY6A83+NfDpBMEk1Yp\nTjS36jmEzcNwEuah9GgnlNiFLlfPUAI2CrffYz83c7MIDusqMOKtuB60ubcz\nqTtCyspQTnXRxaSLCJWN+NNalo+VPpy6MecUVYLwWjkZpUeoaSEe8pbv6Rnm\nKHxhXCLBUFEjoGWqKVJY2Dt2T3OeAw5WNJieaCByd7GTmmiwbxdzj0TcS9dk\nOXSYrJPPwezwtrDFsEy4Z+zOoT3yuh+V86JVWAqY7fBysdWGKXc8OZQr1gUz\nAk1zimZM+8LPJCmu35Q9yqPKBU0W5NRp+yH3m0f1mPWjDtvItT9l2DxW0+wz\nimCkmh4i3tQUlAe1YpjM+vDOsUAeMlTG3o6uS1CIShS0cqTZ+CjPPy9EppxG\nrHqVhSBHLRCEpl+u5/8ex7ao0f/yGl0F3k3YdZ+8PmCGru+RwUWSwJIBXnT+\nBsz8bem8QTjL8jb6Ng7xkbBaLx6d1b5Zu7xYboFabZo3a7a4lXT7cqEy2JYY\nGyYk\r\n=U0gw\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDZ3h194g+Tj/AkWlRKly2kav92BcNcRoNNZ8NRTFfccQIhAIW0k3wAeb+dC5+EhXRAME+qCjiBJaiSt8Ns+uhCiUw1"}]},"_npmUser":{"name":"lukeed","email":"luke@lukeed.com"},"directories":{},"maintainers":[{"name":"lukeed","email":"luke@lukeed.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/url_1.0.0-next.18_1629948258115_0.6912421050551216"},"_hasShrinkwrap":false},"1.0.0-next.19":{"version":"1.0.0-next.19","name":"@polka/url","repository":{"type":"git","url":"git+https://github.com/lukeed/polka.git"},"description":"Super fast, memoized `req.url` parser","module":"build.mjs","types":"index.d.ts","main":"build.js","license":"MIT","exports":{".":{"import":"./build.mjs","require":"./build.js"},"./package.json":"./package.json"},"author":{"name":"Luke Edwards","email":"luke@lukeed.com","url":"https://lukeed.com"},"publishConfig":{"access":"public"},"gitHead":"6ac64983eeb35a67c483949e08f356e46569803c","readme":"# @polka/url [![npm](https://badgen.now.sh/npm/v/@polka/url)](https://npmjs.org/package/@polka/url)\n\n> Super fast, memoized `req.url` parser; _not_ limited to [Polka][polka]!\n\nParses the `url` from a [`IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) request. The returned object will always only contain the following keys: `search`, `query`, `pathname`, and `raw`.\n\n> **Note:** This library does not process `protocol`, `hostname`, `port`, etc.<br>This is because the incoming `req.url` value only begins with the path information.\n\nParsed requests will be mutated with a `_parsedUrl` key, containing the returned output. This is used for future memoization, avoiding the need to fully parse the same `url` value multiple times.\n\n## Install\n\n```\n$ npm install --save @polka/url\n```\n\n## Usage\n\n```js\nconst parse = require('@polka/url');\n\nlet req = {\n  url: '/foo/bar?fizz=buzz'\n};\nlet output = parse(req);\n//=> {\n//=>   pathname: '/foo/bar',\n//=>   raw: '/foo/bar?fizz=buzz',\n//=>   search: '?fizz=buzz',\n//=>   query: {\n//=>     fizz: 'buzz'\n//=>   },\n//=> }\n\n// Attaches result for future memoization\nassert.deepEqual(output, req._parsedUrl); //=> true\n\n// Example with `toDecode` param\nreq = {\n  url: '/f%C3%B8%C3%B8%C3%9F%E2%88%82r?phone=%2b8675309'\n};\nparse(req, true);\n//=> {\n//=>   pathname: '/føøß∂r',\n//=>   raw: '/f%C3%B8%C3%B8%C3%9F%E2%88%82r?phone=%2b8675309',\n//=>   search: '?phone=%2b8675309',\n//=>   query: {\n//=>     phone: '+8675309'\n//=>   }\n//=> }\n\n// Attaches awareness key\nassert(req._decoded); //=> '/føøß∂r'\n```\n\n## API\n\n### url(req, toDecode?)\nReturns: `Object` or `undefined`\n\n> **Important:** The `req` must have a `url` key, otherwise `undefined` will be returned.<br>If no input is provided at all, a `TypeError` will be thrown.\n\n#### req\nType: `IncomingMessage` or `{ url: string }`\n\nThe incoming HTTP request (`req`) or a plain `Object` with a `url` key.\n\n> **Note:** In Node.js servers, the [`req.url`](https://nodejs.org/api/http.html#http_message_url) begins with a pathname & does not include a `hash`.\n\n#### toDecode\nType: `Boolean`<br>\nDefault: `false`\n\nIf enabled, the `pathname` will be fully decoded, via [`decodeURIComponent`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent).\n\n> **Important:** Please note the following behaviors:\n> * `raw` is _never_ decoded; this key reflects your original value\n> * `pathname` is decoded _only_ when `toDecode` is enabled\n> * `search` is _never_ decoded; this key reflects your original querystring value\n> * `query` is _always_ decoded; even when `toDecode` is disabled\n\nAdditionally, the `req` is mutated with `req._decoded` so as to prevent repetitive decoding.\n\n\n## Benchmarks\n\nCheck out the [`bench`](/bench) directory for in-depth benchmark results and comparisons.\n\n\n## Support\n\nAny issues or questions can be sent to the [Polka][polka] repository.<br>However, please specify that your inquiry is about `@polka/url` specifically.\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n\n[polka]: https://github.com/lukeed/polka\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/lukeed/polka/issues"},"homepage":"https://github.com/lukeed/polka#readme","_id":"@polka/url@1.0.0-next.19","_nodeVersion":"16.6.2","_npmVersion":"lerna/3.13.4/node@v16.6.2+x64 (darwin)","dist":{"integrity":"sha512-kHR9OHwP9WLpyC0i/WCAQCgf5hXkR9C+/21qxmrn+YwRlDRnBlqrcrFpXxhJTA9LDHJWa/FjoO2LJ12q8iWlEQ==","shasum":"2c94db828794aa53e7a420809dac870348819233","tarball":"https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.19.tgz","fileCount":6,"unpackedSize":7292,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhJwnbCRA9TVsSAnZWagAAlhAQAI9K0oNM2dhWuCJr6MVy\njaYIvo6E6+YF3olml2doaWdpSYH4P5BYxqXdmP0Ratl8J1GFQZC7FEExCaDX\nhNNNjcR4LFI6cTe0ZCa6BoA91TqCO3vmR6KRFV4s8AbR74IO9mGS3op0XnRZ\nQcUxI6xuEpCtnJZYtU7bBTIOZHrlypj7St1rhlBq71jdGBgPjTPvUn0gSoGP\neXCKCP4Qg1mrPAS3NpucauqxJ3TarB/euxaKvlL7EI/QqatXHeK76ebnhWlD\nfkvXhtFCwY7d0JlPwMFNJEB0aumTiaIfG0oo0Fba11yna0hNrLZq+1Ts4JYY\nLU72u8EW745FcFCEUaXvB7/b4xfKi0JNTNmeLu/xOiWM+gjcUkyV5ss7Is+0\nF5tAzTNr35VQ7THG+uE0fdufU+QEKfwgq6Extics5w1l+kyrj5kQx14KslPw\nK1wTY9m5ptrJjCmMz77405OuAROgpWlFOjSA0TCnwP6AcfpfklUy4J3DOrj8\nx6wE6CQGGPY2kmI3yX2tm6uVf8cJxfR/YN/vr3n+fMyFS1wLVFbNKgPVzldV\nAb5c2M+PBk+Cs8g80ZeHuVrespxYgEnSW3Tmmg581Wa5NXktmOAxH5RQyqu+\nQTfokHSyYi+CCXqzMec7NIK136aJu68bwkKKbUr1GSbs/JuvCP9kiHRIlDD4\npokT\r\n=yIpd\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIB4ZqVvCOZNNmN7OXYG42+Z/XBZb54FrZu6ZtxFc3+pnAiATL9ANZzFum1OiKZyx7sA2jNvJo9URvH2pqorHYV1BSA=="}]},"_npmUser":{"name":"lukeed","email":"luke@lukeed.com"},"directories":{},"maintainers":[{"name":"lukeed","email":"luke@lukeed.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/url_1.0.0-next.19_1629948379460_0.9377288621108204"},"_hasShrinkwrap":false},"1.0.0-next.20":{"version":"1.0.0-next.20","name":"@polka/url","repository":{"type":"git","url":"git+https://github.com/lukeed/polka.git"},"description":"Super fast, memoized `req.url` parser","module":"build.mjs","types":"index.d.ts","main":"build.js","license":"MIT","exports":{".":{"import":"./build.mjs","require":"./build.js"},"./package.json":"./package.json"},"author":{"name":"Luke Edwards","email":"luke@lukeed.com","url":"https://lukeed.com"},"publishConfig":{"access":"public"},"gitHead":"daa2c85fac5d5ac06d7c678018cc55eed00ae95a","readme":"# @polka/url [![npm](https://badgen.now.sh/npm/v/@polka/url)](https://npmjs.org/package/@polka/url)\n\n> Super fast, memoized `req.url` parser; _not_ limited to [Polka][polka]!\n\nParses the `url` from a [`IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) request. The returned object will always only contain the following keys: `search`, `query`, `pathname`, and `raw`.\n\n> **Note:** This library does not process `protocol`, `hostname`, `port`, etc.<br>This is because the incoming `req.url` value only begins with the path information.\n\nParsed requests will be mutated with a `_parsedUrl` key, containing the returned output. This is used for future memoization, avoiding the need to fully parse the same `url` value multiple times.\n\n## Install\n\n```\n$ npm install --save @polka/url\n```\n\n## Usage\n\n```js\nconst parse = require('@polka/url');\n\nlet req = {\n  url: '/foo/bar?fizz=buzz'\n};\nlet output = parse(req);\n//=> {\n//=>   pathname: '/foo/bar',\n//=>   raw: '/foo/bar?fizz=buzz',\n//=>   search: '?fizz=buzz',\n//=>   query: {\n//=>     fizz: 'buzz'\n//=>   },\n//=> }\n\n// Attaches result for future memoization\nassert.deepEqual(output, req._parsedUrl); //=> true\n```\n\n## API\n\n### url(req)\nReturns: `Object` or `undefined`\n\n> **Important:** The `req` must have a `url` key, otherwise `undefined` will be returned.<br>If no input is provided at all, a `TypeError` will be thrown.\n\n#### req\nType: `IncomingMessage` or `{ url: string }`\n\nThe incoming HTTP request (`req`) or a plain `Object` with a `url` key.\n\n> **Note:** In Node.js servers, the [`req.url`](https://nodejs.org/api/http.html#http_message_url) begins with a pathname & does not include a `hash`.\n\n\n## Benchmarks\n\nCheck out the [`bench`](/bench) directory for in-depth benchmark results and comparisons.\n\n\n## Support\n\nAny issues or questions can be sent to the [Polka][polka] repository.<br>However, please specify that your inquiry is about `@polka/url` specifically.\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n\n[polka]: https://github.com/lukeed/polka\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/lukeed/polka/issues"},"homepage":"https://github.com/lukeed/polka#readme","_id":"@polka/url@1.0.0-next.20","_nodeVersion":"16.8.0","_npmVersion":"lerna/3.13.4/node@v16.8.0+x64 (darwin)","dist":{"integrity":"sha512-88p7+M0QGxKpmnkfXjS4V26AnoC/eiqZutE8GLdaI5X12NY75bXSdTY9NkmYb2Xyk1O+MmkuO6Frmsj84V6I8Q==","shasum":"111b5db0f501aa89b05076fa31f0ea0e0c292cd3","tarball":"https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.20.tgz","fileCount":6,"unpackedSize":5528,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhKI7BCRA9TVsSAnZWagAAzuIQAIhqkPeEIBhi/vk3Syth\n5S9ms/0mL/ABvGUjQVG2CGuRLSQTChj2+22cBc9NRw5vB28Jwhzpm36kgKPM\nIg/BY8WPFBP1CHc6U0mo7JnGP6b8UUHktAzdQiSt0/zp/aqZZCNmm2bDCyvh\ndZ3/HOwSArCoV2YvLkvZnBOjYB496gc40UQUTZu671hU79DVMVjFv7ArLC2/\nDDKqKN/+klQoaJ2EbtW8ap19WHalB4jihHdB2QRs1FNO2D7JNIznQTB+xEVw\nVLBRCxjCM/VdPr0VV/EGeC8tIS7GgKvjP0OiFo9vlQkafrY/3Ms/BWha0yC6\nc0ursIHbXScvb6svNeR/VrDWixEFhzC8rJsOWnLFDkq8melhinws93JEbJcA\nYyq01BtXyhT4bHMuEBZGUEit8dQ+OB8GRSjvR8x6L0h7XEFouPdR65kG1yeq\nn13E4xAHY+1hyAiAf0vVsO/bOs7NyCwgr8yCLbqMhFwisO69lfnl7MxY0NSt\nQ0dnjbpLvMuROhUxLar3xRG2WVvxmVMcN0tPjHEEYm2xx7y4QZ5nc8XhKkux\n9kwAdvoBCWfl2mAij67bCxbw9q2o5vzCEToOs7KafBo/7XZatGVZiWP2zVQ9\n+ioDPf3UIIzEOfL/0WbIggSEf6DH1HHJO+PyyZjwcqu+ZLpLpvM0btCUaypv\nBx5E\r\n=FYOf\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFr/kM+hV5mYQ6YSdnwZk/TOSsVxL3BGCdwiN73sQFHSAiEAycQc0u9gMT0qusE4lJT2OdmGCh5G6WnOdZqwJLrXfhg="}]},"_npmUser":{"name":"lukeed","email":"luke@lukeed.com"},"directories":{},"maintainers":[{"name":"lukeed","email":"luke@lukeed.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/url_1.0.0-next.20_1630047937372_0.9774864116259563"},"_hasShrinkwrap":false},"1.0.0-next.21":{"version":"1.0.0-next.21","name":"@polka/url","repository":{"type":"git","url":"git+https://github.com/lukeed/polka.git"},"description":"Super fast, memoized `req.url` parser","module":"build.mjs","types":"index.d.ts","main":"build.js","license":"MIT","exports":{".":{"import":"./build.mjs","require":"./build.js"},"./package.json":"./package.json"},"author":{"name":"Luke Edwards","email":"luke@lukeed.com","url":"https://lukeed.com"},"publishConfig":{"access":"public"},"gitHead":"8d6e31871225f4449e645ecba13de7014f772b34","readme":"# @polka/url [![npm](https://badgen.now.sh/npm/v/@polka/url)](https://npmjs.org/package/@polka/url)\n\n> Super fast, memoized `req.url` parser; _not_ limited to [Polka][polka]!\n\nParses the `url` from a [`IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) request. The returned object will always only contain the following keys: `search`, `query`, `pathname`, and `raw`.\n\n> **Note:** This library does not process `protocol`, `hostname`, `port`, etc.<br>This is because the incoming `req.url` value only begins with the path information.\n\nParsed requests will be mutated with a `_parsedUrl` key, containing the returned output. This is used for future memoization, avoiding the need to fully parse the same `url` value multiple times.\n\n## Install\n\n```\n$ npm install --save @polka/url\n```\n\n## Usage\n\n```js\nconst parse = require('@polka/url');\n\nlet req = {\n  url: '/foo/bar?fizz=buzz'\n};\nlet output = parse(req);\n//=> {\n//=>   pathname: '/foo/bar',\n//=>   raw: '/foo/bar?fizz=buzz',\n//=>   search: '?fizz=buzz',\n//=>   query: {\n//=>     fizz: 'buzz'\n//=>   },\n//=> }\n\n// Attaches result for future memoization\nassert.deepEqual(output, req._parsedUrl); //=> true\n```\n\n## API\n\n### url(req)\nReturns: `Object` or `undefined`\n\n> **Important:** The `req` must have a `url` key, otherwise `undefined` will be returned.<br>If no input is provided at all, a `TypeError` will be thrown.\n\n#### req\nType: `IncomingMessage` or `{ url: string }`\n\nThe incoming HTTP request (`req`) or a plain `Object` with a `url` key.\n\n> **Note:** In Node.js servers, the [`req.url`](https://nodejs.org/api/http.html#http_message_url) begins with a pathname & does not include a `hash`.\n\n\n## Benchmarks\n\nCheck out the [`bench`](/bench) directory for in-depth benchmark results and comparisons.\n\n\n## Support\n\nAny issues or questions can be sent to the [Polka][polka] repository.<br>However, please specify that your inquiry is about `@polka/url` specifically.\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n\n[polka]: https://github.com/lukeed/polka\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/lukeed/polka/issues"},"homepage":"https://github.com/lukeed/polka#readme","_id":"@polka/url@1.0.0-next.21","_nodeVersion":"16.9.1","_npmVersion":"lerna/3.13.4/node@v16.9.1+x64 (darwin)","dist":{"integrity":"sha512-a5Sab1C4/icpTZVzZc5Ghpz88yQtGOyNqYXcZgOssB2uuAr+wF/MvN6bgtW32q7HHrvBki+BsZ0OuNv6EV3K9g==","shasum":"5de5a2385a35309427f6011992b544514d559aa1","tarball":"https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.21.tgz","fileCount":6,"unpackedSize":5528,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDljFfE0GHmwFJbs8mWFKgfQsD0KrvK0GHvofvPXbUg8QIhAMLUv5jJWPWlENsBPrWjO1xgHeSPvBlG4qsmMEka17yr"}]},"_npmUser":{"name":"lukeed","email":"luke@lukeed.com"},"directories":{},"maintainers":[{"name":"lukeed","email":"luke@lukeed.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/url_1.0.0-next.21_1633092980231_0.3909195411486206"},"_hasShrinkwrap":false},"1.0.0-next.23":{"version":"1.0.0-next.23","name":"@polka/url","repository":{"type":"git","url":"git+https://github.com/lukeed/polka.git"},"description":"Super fast, memoized `req.url` parser","module":"build.mjs","types":"index.d.ts","main":"build.js","license":"MIT","exports":{".":{"types":"./index.d.ts","import":"./build.mjs","require":"./build.js"},"./package.json":"./package.json"},"author":{"name":"Luke Edwards","email":"luke@lukeed.com","url":"https://lukeed.com"},"publishConfig":{"access":"public"},"readme":"# @polka/url [![npm](https://badgen.now.sh/npm/v/@polka/url)](https://npmjs.org/package/@polka/url)\n\n> Super fast, memoized `req.url` parser; _not_ limited to [Polka][polka]!\n\nParses the `url` from a [`IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) request. The returned object will always only contain the following keys: `search`, `query`, `pathname`, and `raw`.\n\n> **Note:** This library does not process `protocol`, `hostname`, `port`, etc.<br>This is because the incoming `req.url` value only begins with the path information.\n\nParsed requests will be mutated with a `_parsedUrl` key, containing the returned output. This is used for future memoization, avoiding the need to fully parse the same `url` value multiple times.\n\n## Install\n\n```\n$ npm install --save @polka/url\n```\n\n## Usage\n\n```js\nconst parse = require('@polka/url');\n\nlet req = {\n  url: '/foo/bar?fizz=buzz'\n};\nlet output = parse(req);\n//=> {\n//=>   pathname: '/foo/bar',\n//=>   raw: '/foo/bar?fizz=buzz',\n//=>   search: '?fizz=buzz',\n//=>   query: {\n//=>     fizz: 'buzz'\n//=>   },\n//=> }\n\n// Attaches result for future memoization\nassert.deepEqual(output, req._parsedUrl); //=> true\n```\n\n## API\n\n### url(req)\nReturns: `Object` or `undefined`\n\n> **Important:** The `req` must have a `url` key, otherwise `undefined` will be returned.<br>If no input is provided at all, a `TypeError` will be thrown.\n\n#### req\nType: `IncomingMessage` or `{ url: string }`\n\nThe incoming HTTP request (`req`) or a plain `Object` with a `url` key.\n\n> **Note:** In Node.js servers, the [`req.url`](https://nodejs.org/api/http.html#http_message_url) begins with a pathname & does not include a `hash`.\n\n\n## Benchmarks\n\nCheck out the [`bench`](/bench) directory for in-depth benchmark results and comparisons.\n\n\n## Support\n\nAny issues or questions can be sent to the [Polka][polka] repository.<br>However, please specify that your inquiry is about `@polka/url` specifically.\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n\n[polka]: https://github.com/lukeed/polka\n","readmeFilename":"readme.md","gitHead":"8fb37d8e63344ce3a537025ba2fbb4245ef853b3","bugs":{"url":"https://github.com/lukeed/polka/issues"},"homepage":"https://github.com/lukeed/polka#readme","_id":"@polka/url@1.0.0-next.23","_nodeVersion":"18.12.1","_npmVersion":"8.19.2","dist":{"integrity":"sha512-C16M+IYz0rgRhWZdCmK+h58JMv8vijAA61gmz2rspCSwKwzBebpdcsiUmwrtJRdphuY30i6BSLEOP8ppbNLyLg==","shasum":"498e41218ab3b6a1419c735e5c6ae2c5ed609b6c","tarball":"https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.23.tgz","fileCount":5,"unpackedSize":4379,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAJmeO3WhzMJYQazg1qdjhStpCWXnnRJQcFzxLDCQ5ycAiB3DFU/B68i6VPyKGxH+/1Pm5Za3py6ylwo1iYef1jVNg=="}]},"_npmUser":{"name":"lukeed","email":"luke@lukeed.com"},"directories":{},"maintainers":[{"name":"lukeed","email":"luke@lukeed.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/url_1.0.0-next.23_1694024666168_0.020192544158251113"},"_hasShrinkwrap":false},"1.0.0-next.24":{"version":"1.0.0-next.24","name":"@polka/url","repository":{"type":"git","url":"git+https://github.com/lukeed/polka.git"},"description":"Super fast, memoized `req.url` parser","module":"build.mjs","types":"index.d.ts","main":"build.js","license":"MIT","exports":{".":{"types":"./index.d.ts","import":"./build.mjs","require":"./build.js"},"./package.json":"./package.json"},"author":{"name":"Luke Edwards","email":"luke@lukeed.com","url":"https://lukeed.com"},"publishConfig":{"access":"public"},"_id":"@polka/url@1.0.0-next.24","readme":"# @polka/url [![npm](https://badgen.now.sh/npm/v/@polka/url)](https://npmjs.org/package/@polka/url)\n\n> Super fast, memoized `req.url` parser; _not_ limited to [Polka][polka]!\n\nParses the `url` from a [`IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) request. The returned object will always only contain the following keys: `search`, `query`, `pathname`, and `raw`.\n\n> **Note:** This library does not process `protocol`, `hostname`, `port`, etc.<br>This is because the incoming `req.url` value only begins with the path information.\n\nParsed requests will be mutated with a `_parsedUrl` key, containing the returned output. This is used for future memoization, avoiding the need to fully parse the same `url` value multiple times.\n\n## Install\n\n```\n$ npm install --save @polka/url\n```\n\n## Usage\n\n```js\nconst parse = require('@polka/url');\n\nlet req = {\n  url: '/foo/bar?fizz=buzz'\n};\nlet output = parse(req);\n//=> {\n//=>   pathname: '/foo/bar',\n//=>   raw: '/foo/bar?fizz=buzz',\n//=>   search: '?fizz=buzz',\n//=>   query: {\n//=>     fizz: 'buzz'\n//=>   },\n//=> }\n\n// Attaches result for future memoization\nassert.deepEqual(output, req._parsedUrl); //=> true\n```\n\n## API\n\n### url(req)\nReturns: `Object` or `undefined`\n\n> **Important:** The `req` must have a `url` key, otherwise `undefined` will be returned.<br>If no input is provided at all, a `TypeError` will be thrown.\n\n#### req\nType: `IncomingMessage` or `{ url: string }`\n\nThe incoming HTTP request (`req`) or a plain `Object` with a `url` key.\n\n> **Note:** In Node.js servers, the [`req.url`](https://nodejs.org/api/http.html#http_message_url) begins with a pathname & does not include a `hash`.\n\n\n## Benchmarks\n\nCheck out the [`bench`](/bench) directory for in-depth benchmark results and comparisons.\n\n\n## Support\n\nAny issues or questions can be sent to the [Polka][polka] repository.<br>However, please specify that your inquiry is about `@polka/url` specifically.\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n\n[polka]: https://github.com/lukeed/polka\n","readmeFilename":"readme.md","gitHead":"b7a236f2b5490b296a14f8423c1dfbc35c060ac7","bugs":{"url":"https://github.com/lukeed/polka/issues"},"homepage":"https://github.com/lukeed/polka#readme","_nodeVersion":"20.8.1","_npmVersion":"10.1.0","dist":{"integrity":"sha512-2LuNTFBIO0m7kKIQvvPHN6UE63VjpmL9rnEEaOOaiSPbZK+zUOYIzBAWcED+3XYzhYsd/0mD57VdxAEqqV52CQ==","shasum":"58601079e11784d20f82d0585865bb42305c4df3","tarball":"https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.24.tgz","fileCount":5,"unpackedSize":4382,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIF6qF0pOv6Y8PNYs6BBORXMFXYSy47CTfzlNj7EhlkwFAiBDyrO0XGTi+0h884zyTJk3xswpDx0nqvXbf4iVjKY09Q=="}]},"_npmUser":{"name":"lukeed","email":"luke@lukeed.com"},"directories":{},"maintainers":[{"name":"lukeed","email":"luke@lukeed.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/url_1.0.0-next.24_1701707100449_0.86811340470757"},"_hasShrinkwrap":false},"1.0.0-next.25":{"version":"1.0.0-next.25","name":"@polka/url","repository":{"type":"git","url":"git+https://github.com/lukeed/polka.git"},"description":"Super fast, memoized `req.url` parser","module":"build.mjs","types":"index.d.ts","main":"build.js","license":"MIT","exports":{".":{"types":"./index.d.ts","import":"./build.mjs","require":"./build.js"},"./package.json":"./package.json"},"author":{"name":"Luke Edwards","email":"luke@lukeed.com","url":"https://lukeed.com"},"publishConfig":{"access":"public"},"_id":"@polka/url@1.0.0-next.25","readme":"# @polka/url [![npm](https://badgen.now.sh/npm/v/@polka/url)](https://npmjs.org/package/@polka/url) [![licenses](https://licenses.dev/b/npm/%40polka%2Furl)](https://licenses.dev/npm/%40polka%2Furl)\n\n> Super fast, memoized `req.url` parser; _not_ limited to [Polka][polka]!\n\nParses the `url` from a [`IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) request. The returned object will always only contain the following keys: `search`, `query`, `pathname`, and `raw`.\n\n> **Note:** This library does not process `protocol`, `hostname`, `port`, etc.<br>This is because the incoming `req.url` value only begins with the path information.\n\nParsed requests will be mutated with a `_parsedUrl` key, containing the returned output. This is used for future memoization, avoiding the need to fully parse the same `url` value multiple times.\n\n## Install\n\n```\n$ npm install --save @polka/url\n```\n\n## Usage\n\n```js\nconst parse = require('@polka/url');\n\nlet req = {\n  url: '/foo/bar?fizz=buzz'\n};\nlet output = parse(req);\n//=> {\n//=>   pathname: '/foo/bar',\n//=>   raw: '/foo/bar?fizz=buzz',\n//=>   search: '?fizz=buzz',\n//=>   query: {\n//=>     fizz: 'buzz'\n//=>   },\n//=> }\n\n// Attaches result for future memoization\nassert.deepEqual(output, req._parsedUrl); //=> true\n```\n\n## API\n\n### url(req)\nReturns: `Object` or `undefined`\n\n> **Important:** The `req` must have a `url` key, otherwise `undefined` will be returned.<br>If no input is provided at all, a `TypeError` will be thrown.\n\n#### req\nType: `IncomingMessage` or `{ url: string }`\n\nThe incoming HTTP request (`req`) or a plain `Object` with a `url` key.\n\n> **Note:** In Node.js servers, the [`req.url`](https://nodejs.org/api/http.html#http_message_url) begins with a pathname & does not include a `hash`.\n\n\n## Benchmarks\n\nCheck out the [`bench`](/bench) directory for in-depth benchmark results and comparisons.\n\n\n## Support\n\nAny issues or questions can be sent to the [Polka][polka] repository.<br>However, please specify that your inquiry is about `@polka/url` specifically.\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n\n[polka]: https://github.com/lukeed/polka\n","readmeFilename":"readme.md","gitHead":"eba0aaff89c8b0765dcc89b23f738399c5edff5e","bugs":{"url":"https://github.com/lukeed/polka/issues"},"homepage":"https://github.com/lukeed/polka#readme","_nodeVersion":"20.10.0","_npmVersion":"10.2.3","dist":{"integrity":"sha512-j7P6Rgr3mmtdkeDGTe0E/aYyWEWVtc5yFXtHCRHs28/jptDEWfaVOc5T7cblqy1XKPPfCxJc/8DwQ5YgLOZOVQ==","shasum":"f077fdc0b5d0078d30893396ff4827a13f99e817","tarball":"https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.25.tgz","fileCount":5,"unpackedSize":4480,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFrh7FzuSJ6LJWVLhrtmPMxjU/PcnFUUZqPXtAEGygotAiEA920/YHZ0/k8jrajtS4nEo9TiyOQPqSP8gpJGVtJGkCg="}]},"_npmUser":{"name":"lukeed","email":"luke@lukeed.com"},"directories":{},"maintainers":[{"name":"lukeed","email":"luke@lukeed.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/url_1.0.0-next.25_1709850745210_0.08813311437885729"},"_hasShrinkwrap":false}},"time":{"created":"2018-09-18T18:17:32.040Z","0.5.0":"2018-09-18T18:17:32.381Z","modified":"2024-03-07T22:32:25.849Z","1.0.0-next.0":"2019-03-10T07:34:03.975Z","1.0.0-next.1":"2019-03-31T00:13:51.286Z","1.0.0-next.3":"2019-05-02T18:30:03.922Z","1.0.0-next.7":"2019-10-29T06:25:26.300Z","1.0.0-next.9":"2019-11-21T03:09:27.406Z","1.0.0-next.11":"2020-01-13T14:49:26.566Z","1.0.0-next.12":"2021-03-28T22:19:37.173Z","1.0.0-next.15":"2021-05-24T22:01:09.099Z","1.0.0-next.17":"2021-08-14T00:28:57.328Z","1.0.0-next.18":"2021-08-26T03:24:18.299Z","1.0.0-next.19":"2021-08-26T03:26:19.608Z","1.0.0-next.20":"2021-08-27T07:05:37.500Z","1.0.0-next.21":"2021-10-01T12:56:20.378Z","1.0.0-next.23":"2023-09-06T18:24:26.430Z","1.0.0-next.24":"2023-12-04T16:25:00.639Z","1.0.0-next.25":"2024-03-07T22:32:25.396Z"},"maintainers":[{"name":"lukeed","email":"luke@lukeed.com"}],"description":"Super fast, memoized `req.url` parser","repository":{"type":"git","url":"https://github.com/lukeed/polka.git"},"author":{"name":"Luke Edwards","email":"luke@lukeed.com","url":"https://lukeed.com"},"license":"MIT","readme":"","readmeFilename":""}