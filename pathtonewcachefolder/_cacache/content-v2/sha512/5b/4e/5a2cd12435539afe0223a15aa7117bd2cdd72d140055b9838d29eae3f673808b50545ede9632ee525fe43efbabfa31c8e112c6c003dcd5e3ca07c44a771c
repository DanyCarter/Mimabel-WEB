{"_id":"@fastify/busboy","_rev":"19-2c3eb29da38b80fadb75a46d33d76af5","name":"@fastify/busboy","dist-tags":{"next":"1.0.0-next2","latest":"2.1.1"},"versions":{"1.0.0-next1":{"name":"@fastify/busboy","version":"1.0.0-next1","private":false,"author":{"name":"Brian White","email":"mscdex@mscdex.net"},"contributors":[{"name":"Igor Savin","email":"kibertoad@gmail.com","url":"https://github.com/kibertoad"},{"name":"Aras Abbasi","email":"aras.abbasi@gmail.com","url":"https://github.com/uzlopak"}],"description":"A streaming parser for HTML form data for node.js","main":"lib/main","types":"lib/main.d.ts","scripts":{"bench:dicer":"node deps/dicer/bench/dicer-bench-multipart-parser.js","coveralls":"nyc report --reporter=lcov","lint":"eslint .","lint:everything":"npm run lint && npm run test:types","test:mocha":"mocha test","test:types":"tsd","test:coverage":"nyc npm run test","test":"npm run test:mocha"},"engines":{"node":">=10.17.0"},"devDependencies":{"@types/node":"^16.11.10","chai":"^4.3.4","eslint":"^8.3.0","eslint-plugin-node":"^11.1.0","mocha":"^9.1.3","nyc":"^15.1.0","tsd":"^0.19.0","typescript":"^4.5.2"},"keywords":["uploads","forms","multipart","form-data"],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/fastify/busboy.git"},"tsd":{"directory":"test/types","compilerOptions":{"esModuleInterop":false,"module":"commonjs","target":"ES2017"}},"gitHead":"02eb3ce5b144ec8b72ad333ea030d50997e86a15","bugs":{"url":"https://github.com/fastify/busboy/issues"},"homepage":"https://github.com/fastify/busboy#readme","_id":"@fastify/busboy@1.0.0-next1","_nodeVersion":"16.13.0","_npmVersion":"8.1.0","dist":{"integrity":"sha512-pmH0hRjMEfoF9kF/boEwvJdrW4y0/INdzUTQdchcN5l7s0lxvNtFgMH5g1ofQSP0cLsNcxbpRGbPwVHOv+vnxA==","shasum":"3d3d0f7b6ed9f40ffe21eb433bc353889281752f","tarball":"https://registry.npmjs.org/@fastify/busboy/-/busboy-1.0.0-next1.tgz","fileCount":15,"unpackedSize":680517,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhpVJZCRA9TVsSAnZWagAAoaoP/RbiNA4wMk/Oq/uCSEX3\n1aPPBN3p12bI0qt/bkt+Z0XFeK0aIxhfALDCuVWF2gpxuNlmELOh5ziIM/g4\nQx8dor7EbwhQVmdTcE6SNmJYwJI3eQInHQWwAgMT4SlHrgqOgr+qGkioRHlY\n7fCrSja78PhyA+nxPFjPr4eQwxHI6KuaoJKjXPZ+fNrIh10x66qlhf5zlaaC\nLsqLY8WmddqLuMSJ098UnKUy5SrKR76y1yW3H1riTJmTj0IV6fvrzOPok1Bi\nruRGD6140A7kVBFUp4LLrTQdraakHaWK9Zs4SVSbOoBu7QyJK5YHUgJl3mzs\njYfID+hxmQAXD2wFGe8D0pUQWvTUlz1tZs04JpictVk7TM5XgBWaQK6a/2Nc\nUgPeVD2wl3rQCqZpehRjeYu78kgg2x98yAJp9X923t7h6wKuclYQTdVAU+WY\ntLwc1fcIk1Fm0Dqa3Egee4RcCRK3oQlGOKyRED7WMFa3kD9u41pHdgXWqywI\nO76q48d1Tuuq2ZtxCX3nNDCoULmPQPgYTiFru94qs8Vr06dgIn6+2l0YB6hn\nhDZO5kqUp1FGZ1EkqTZxp0mkK15CD6rC7COn3ZyE4bqKMZybQ2toDMx374Lc\nn6Onf6Vtc3lcWBytq3VcpQ3nYteBpaL5av1E/T4UrDtUpnxBnS2DKh6/ljOR\nhgxa\r\n=oE2B\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC4XpVFkNoksRLza0045/OMohZn/cW4k/F7RXHauy47SAIgUN1LfYNxda1QOmnB5nu9QzHaoTXAqPSWE2oRODmC3LI="}]},"_npmUser":{"name":"kibertoad","email":"iselwin@gmail.com"},"directories":{},"maintainers":[{"name":"starptech","email":"deusdustin@gmail.com"},{"name":"delvedor","email":"tommydelved@gmail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"},{"name":"allevo","email":"tomallevi@gmail.com"},{"name":"jsumners","email":"james.sumners@gmail.com"},{"name":"zekth","email":"vince.legoff@gmail.com"},{"name":"ethan_arrowood","email":"ethan@arrowood.dev"},{"name":"eomm","email":"behemoth89@gmail.com"},{"name":"fox1t","email":"maksim@sinik.it"},{"name":"salmanm","email":"salmanmitha@gmail.com"},{"name":"davidmarkclements","email":"david.mark.clements@gmail.com"},{"name":"airhorns","email":"harry@harry.me"},{"name":"kibertoad","email":"iselwin@gmail.com"},{"name":"climba03003","email":"kaka@kakawebsitedemo.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/busboy_1.0.0-next1_1638224473463_0.9839171413937888"},"_hasShrinkwrap":false},"1.0.0-next2":{"name":"@fastify/busboy","version":"1.0.0-next2","private":false,"author":{"name":"Brian White","email":"mscdex@mscdex.net"},"contributors":[{"name":"Igor Savin","email":"kibertoad@gmail.com","url":"https://github.com/kibertoad"},{"name":"Aras Abbasi","email":"aras.abbasi@gmail.com","url":"https://github.com/uzlopak"}],"description":"A streaming parser for HTML form data for node.js","main":"lib/main","types":"lib/main.d.ts","scripts":{"bench:busboy":"node bench/fastify-busboy-bench.js","bench:dicer":"node bench/dicer/dicer-bench-multipart-parser.js","coveralls":"nyc report --reporter=lcov","lint":"npm run lint:standard","lint:everything":"npm run lint && npm run test:types","lint:fix":"standard --fix","lint:standard":"standard --verbose | snazzy","test:mocha":"mocha test","test:types":"tsd","test:coverage":"nyc npm run test","test":"npm run test:mocha"},"engines":{"node":">=10.17.0"},"dependencies":{"text-decoding":"^1.0.0"},"devDependencies":{"@types/node":"^16.11.10","busboy":"^0.3.1","chai":"^4.3.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-node":"^11.1.0","mocha":"^9.1.3","nyc":"^15.1.0","photofinish":"^1.8.0","snazzy":"^9.0.0","standard":"^16.0.4","tsd":"^0.19.0","typescript":"^4.5.2"},"keywords":["uploads","forms","multipart","form-data"],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/fastify/busboy.git"},"tsd":{"directory":"test/types","compilerOptions":{"esModuleInterop":false,"module":"commonjs","target":"ES2017"}},"standard":{"globals":["describe","it"],"ignore":["bench"]},"readme":"# busboy\n\n<div align=\"center\">\n\n[![Build Status](https://github.com/fastify/busboy/workflows/ci/badge.svg)](https://github.com/fastify/busboy/actions)\n[![Coverage Status](https://coveralls.io/repos/fastify/busboy/badge.svg?branch=master)](https://coveralls.io/r/fastify/busboy?branch=master)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://standardjs.com/)\n[![Known Vulnerabilities](https://snyk.io/test/github/fastify/busboy/badge.svg)](https://snyk.io/test/github/fastify/busboy)\n[![Security Responsible Disclosure](https://img.shields.io/badge/Security-Responsible%20Disclosure-yellow.svg)](https://github.com/nodejs/security-wg/blob/HEAD/processes/responsible_disclosure_template.md)\n\n</div>\n\n<div align=\"center\">\n\n[![NPM version](https://img.shields.io/npm/v/@fastify/busboy.svg?style=flat)](https://www.npmjs.com/package/@fastify/busboy)\n[![NPM downloads](https://img.shields.io/npm/dm/@fastify/busboy.svg?style=flat)](https://www.npmjs.com/package/@fastify/busboy)\n\n</div>\n\nDescription\n===========\n\nA Node.js module for parsing incoming HTML form data.\n\nThis is an officially supported fork by [fastify](https://github.com/fastify/) organization of the amazing library [originally created](https://github.com/mscdex/busboy) by Brian White,\naimed at addressing long-standing issues with it.\n\nBenchmark (Mean time for 500 Kb payload, 2000 cycles, 1000 cycle warmup):\n\n| Library               | Mean time in nanoseconds |\n|-----------------------|--------------------------|\n| busboy 0.31           |                          |\n| @fastify/busboy 1.0.0 |                          |\n\n[Changelog](https://github.com/fastify/busboy/blob/master/CHANGELOG.md) since busboy 0.31.\n\nRequirements\n============\n\n* [node.js](http://nodejs.org/) -- v10 or newer\n\n\nInstall\n=======\n\n    npm install @fastify/busboy\n\n\nExamples\n========\n\n* Parsing (multipart) with default options:\n\n```javascript\nconst http = require('http');\nconst { inspect } = require('util');\nconst Busboy = require('busboy');\n\nhttp.createServer((req, res) => {\n  if (req.method === 'POST') {\n    const busboy = new Busboy({ headers: req.headers });\n    busboy.on('file', (fieldname, file, filename, encoding, mimetype) => {\n      console.log(`File [${fieldname}]: filename: ${filename}, encoding: ${encoding}, mimetype: ${mimetype}`);\n      file.on('data', data => {\n        console.log(`File [${fieldname}] got ${data.length} bytes`);\n      });\n      file.on('end', () => {\n        console.log(`File [${fieldname}] Finished`);\n      });\n    });\n    busboy.on('field', (fieldname, val, fieldnameTruncated, valTruncated, encoding, mimetype) => {\n      console.log(`Field [${fieldname}]: value: ${inspect(val)}`);\n    });\n    busboy.on('finish', () => {\n      console.log('Done parsing form!');\n      res.writeHead(303, { Connection: 'close', Location: '/' });\n      res.end();\n    });\n    req.pipe(busboy);\n  } else if (req.method === 'GET') {\n    res.writeHead(200, { Connection: 'close' });\n    res.end(`<html><head></head><body>\n               <form method=\"POST\" enctype=\"multipart/form-data\">\n                <input type=\"text\" name=\"textfield\"><br>\n                <input type=\"file\" name=\"filefield\"><br>\n                <input type=\"submit\">\n              </form>\n            </body></html>`);\n  }\n}).listen(8000, () => {\n  console.log('Listening for requests');\n});\n\n// Example output, using http://nodejs.org/images/ryan-speaker.jpg as the file:\n//\n// Listening for requests\n// File [filefield]: filename: ryan-speaker.jpg, encoding: binary\n// File [filefield] got 11971 bytes\n// Field [textfield]: value: 'testing! :-)'\n// File [filefield] Finished\n// Done parsing form!\n```\n\n* Save all incoming files to disk:\n\n```javascript\nconst http = require('http');\nconst path = require('path');\nconst os = require('os');\nconst fs = require('fs');\n\nconst Busboy = require('busboy');\n\nhttp.createServer(function(req, res) {\n  if (req.method === 'POST') {\n    const busboy = new Busboy({ headers: req.headers });\n    busboy.on('file', function(fieldname, file, filename, encoding, mimetype) {\n      var saveTo = path.join(os.tmpdir(), path.basename(fieldname));\n      file.pipe(fs.createWriteStream(saveTo));\n    });\n    busboy.on('finish', function() {\n      res.writeHead(200, { 'Connection': 'close' });\n      res.end(\"That's all folks!\");\n    });\n    return req.pipe(busboy);\n  }\n  res.writeHead(404);\n  res.end();\n}).listen(8000, function() {\n  console.log('Listening for requests');\n});\n```\n\n* Parsing (urlencoded) with default options:\n\n```javascript\nconst http = require('http');\nconst { inspect } = require('util');\n\nconst Busboy = require('busboy');\n\nhttp.createServer(function(req, res) {\n  if (req.method === 'POST') {\n    const busboy = new Busboy({ headers: req.headers });\n    busboy.on('file', function(fieldname, file, filename, encoding, mimetype) {\n      console.log('File [' + fieldname + ']: filename: ' + filename);\n      file.on('data', function(data) {\n        console.log('File [' + fieldname + '] got ' + data.length + ' bytes');\n      });\n      file.on('end', function() {\n        console.log('File [' + fieldname + '] Finished');\n      });\n    });\n    busboy.on('field', function(fieldname, val, fieldnameTruncated, valTruncated) {\n      console.log('Field [' + fieldname + ']: value: ' + inspect(val));\n    });\n    busboy.on('finish', function() {\n      console.log('Done parsing form!');\n      res.writeHead(303, { Connection: 'close', Location: '/' });\n      res.end();\n    });\n    req.pipe(busboy);\n  } else if (req.method === 'GET') {\n    res.writeHead(200, { Connection: 'close' });\n    res.end('<html><head></head><body>\\\n               <form method=\"POST\">\\\n                <input type=\"text\" name=\"textfield\"><br />\\\n                <select name=\"selectfield\">\\\n                  <option value=\"1\">1</option>\\\n                  <option value=\"10\">10</option>\\\n                  <option value=\"100\">100</option>\\\n                  <option value=\"9001\">9001</option>\\\n                </select><br />\\\n                <input type=\"checkbox\" name=\"checkfield\">Node.js rules!<br />\\\n                <input type=\"submit\">\\\n              </form>\\\n            </body></html>');\n  }\n}).listen(8000, function() {\n  console.log('Listening for requests');\n});\n\n// Example output:\n//\n// Listening for requests\n// Field [textfield]: value: 'testing! :-)'\n// Field [selectfield]: value: '9001'\n// Field [checkfield]: value: 'on'\n// Done parsing form!\n```\n\n\nAPI\n===\n\n_Busboy_ is a _Writable_ stream\n\nBusboy (special) events\n-----------------------\n\n* **file**(< _string_ >fieldname, < _ReadableStream_ >stream, < _string_ >filename, < _string_ >transferEncoding, < _string_ >mimeType) - Emitted for each new file form field found. `transferEncoding` contains the 'Content-Transfer-Encoding' value for the file stream. `mimeType` contains the 'Content-Type' value for the file stream.\n    * Note: if you listen for this event, you should always handle the `stream` no matter if you care about the file contents or not (e.g. you can simply just do `stream.resume();` if you want to discard the contents), otherwise the 'finish' event will never fire on the Busboy instance. However, if you don't care about **any** incoming files, you can simply not listen for the 'file' event at all and any/all files will be automatically and safely discarded (these discarded files do still count towards `files` and `parts` limits).\n    * If a configured file size limit was reached, `stream` will both have a boolean property `truncated` (best checked at the end of the stream) and emit a 'limit' event to notify you when this happens.\n    * The property `bytesRead` informs about the number of bytes that have been read so far.\n\n* **field**(< _string_ >fieldname, < _string_ >value, < _boolean_ >fieldnameTruncated, < _boolean_ >valueTruncated, < _string_ >transferEncoding, < _string_ >mimeType) - Emitted for each new non-file field found.\n\n* **partsLimit**() - Emitted when specified `parts` limit has been reached. No more 'file' or 'field' events will be emitted.\n\n* **filesLimit**() - Emitted when specified `files` limit has been reached. No more 'file' events will be emitted.\n\n* **fieldsLimit**() - Emitted when specified `fields` limit has been reached. No more 'field' events will be emitted.\n\n\nBusboy methods\n--------------\n\n* **(constructor)**(< _object_ >config) - Creates and returns a new Busboy instance.\n\n    * The constructor takes the following valid `config` settings:\n\n        * **headers** - _object_ - These are the HTTP headers of the incoming request, which are used by individual parsers.\n\n        * **autoDestroy** - _boolean_ - Whether this stream should automatically call .destroy() on itself after ending. (Default: false).\n\n        * **highWaterMark** - _integer_ - highWaterMark to use for this Busboy instance (Default: WritableStream default).\n\n        * **fileHwm** - _integer_ - highWaterMark to use for file streams (Default: ReadableStream default).\n\n        * **defCharset** - _string_ - Default character set to use when one isn't defined (Default: 'utf8').\n\n        * **preservePath** - _boolean_ - If paths in the multipart 'filename' field shall be preserved. (Default: false).\n\n        * **isPartAFile** - __function__ - Use this function to override the default file detection functionality. It has following parameters:\n\n            * fieldName - __string__ The name of the field.\n\n            * contentType - __string__ The content-type of the part, e.g. `text/plain`, `image/jpeg`, `application/octet-stream`\n\n            * fileName - __string__ The name of a file supplied by the part.\n\n          (Default: `(fieldName, contentType, fileName) => (contentType === 'application/octet-stream' || fileName !== undefined)`)\n\n        * **limits** - _object_ - Various limits on incoming data. Valid properties are:\n\n            * **fieldNameSize** - _integer_ - Max field name size (in bytes) (Default: 100 bytes).\n\n            * **fieldSize** - _integer_ - Max field value size (in bytes) (Default: 1 MiB, which is 1024 x 1024 bytes).\n\n            * **fields** - _integer_ - Max number of non-file fields (Default: Infinity).\n\n            * **fileSize** - _integer_ - For multipart forms, the max file size (in bytes) (Default: Infinity).\n\n            * **files** - _integer_ - For multipart forms, the max number of file fields (Default: Infinity).\n\n            * **parts** - _integer_ - For multipart forms, the max number of parts (fields + files) (Default: Infinity).\n\n            * **headerPairs** - _integer_ - For multipart forms, the max number of header key=>value pairs to parse **Default:** 2000\n\n            * **headerSize** - _integer_ - For multipart forms, the max size of a multipart header **Default:** 81920.\n\n    * The constructor can throw errors:\n\n        * **Busboy expected an options-Object.** - Busboy expected an Object as first parameters.\n\n        * **Busboy expected an options-Object with headers-attribute.** - The first parameter is lacking of a headers-attribute.\n\n        * **Limit $limit is not a valid number** - Busboy expected the desired limit to be of type number. Busboy throws this Error to prevent a potential security issue by falling silently back to the Busboy-defaults. Potential source for this Error can be the direct use of environment variables without transforming them to the type number. \n\n        * **Unsupported Content-Type.** - The `Content-Type` isn't one Busboy can parse.\n\n        * **Missing Content-Type-header.** - The provided headers don't include `Content-Type` at all.\n","readmeFilename":"README.md","gitHead":"a7a876b64b6198f1b4ca65577ed1287ae6bca0bd","bugs":{"url":"https://github.com/fastify/busboy/issues"},"homepage":"https://github.com/fastify/busboy#readme","_id":"@fastify/busboy@1.0.0-next2","_nodeVersion":"16.12.0","_npmVersion":"8.1.0","dist":{"integrity":"sha512-GF+zJ8zzl8Ai+EL35EfMgZZU/XO3dn+excmmsxWq9OgEsEQhjxDS/V3svGcyOLz0+RLs15/mESEyVcTQMtgI8A==","shasum":"c4efcda1a0f27b7167718d25a38acefabe5f2a02","tarball":"https://registry.npmjs.org/@fastify/busboy/-/busboy-1.0.0-next2.tgz","fileCount":13,"unpackedSize":61232,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhq9IfCRA9TVsSAnZWagAAPEQP/jmXUt7Sk14zFL5Zc2Wp\ng1PmXwtxqEXw7Z63kiC5TDQ1IG6/1xTdNsiLEVPL45kTXBWTYZ32sVsQTIUY\nezCLIsOZzznzzrSRize2tVrK28xs6bem04GurMXepLqHGhrzeIaU/cUcXOWA\nGe5NsGlO5pNQfeq53sVSBVEhPOBB+T/+dE5G5BcdyeyDiAGQYH8bKPhM5pmN\n35m6qw6VYFYSJaHbGMl4ZmfSAmVXiCfntbktLhnjerPYxoNhbMILTeZiQra9\nTPdSBT/4wBbGhDXL5VUwrzJ/BQzs1OFj9mcm3Vs2Zdi3/1PLOThokPZo3map\nO1uTcETwE3SEAxpbSGodTbIds/hzi+ebkCo4avNrhUfjK2dlT6sviqfuIY8m\nOgvAArKWjdk9cZufo4ardCsWsxMruzS4yYdRNlbu/ySxLKt0T9D4TcI8zIhO\n2JAf4DApnpdrxOM3f59+syTIlu73/bkji7z1fJ+nWb8sDW18sfxTQ/d6wRZR\nGLCl6Kc1XaPxkkyMS2UCSHYDk65OHmFeNiHDgaH9aI1jUWSPLYHdMhS+NjG/\n07zg6RVOy+JmEpHFJQNAQGdFx5akcF+qugXTT2UljhxkaStCthbLgVde949j\nbiB0w0nLjjLQHbbC4ar7QfpkzdSyQ49c3KqJ5E+++72TIHBmH5dzAkb/W/Vt\nn2LM\r\n=arzz\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAilCMhMy9P3qakzQ1kEnTrQIaw5VmqJ+SL9bljUG58fAiEAnAO/imWzo06lsbnA6eoMkGOyU1VrdN8ZsxmTl9UagZ4="}]},"_npmUser":{"name":"kibertoad","email":"iselwin@gmail.com"},"directories":{},"maintainers":[{"name":"starptech","email":"deusdustin@gmail.com"},{"name":"delvedor","email":"tommydelved@gmail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"},{"name":"allevo","email":"tomallevi@gmail.com"},{"name":"jsumners","email":"james.sumners@gmail.com"},{"name":"zekth","email":"vince.legoff@gmail.com"},{"name":"ethan_arrowood","email":"ethan@arrowood.dev"},{"name":"eomm","email":"behemoth89@gmail.com"},{"name":"fox1t","email":"maksim@sinik.it"},{"name":"salmanm","email":"salmanmitha@gmail.com"},{"name":"davidmarkclements","email":"david.mark.clements@gmail.com"},{"name":"airhorns","email":"harry@harry.me"},{"name":"kibertoad","email":"iselwin@gmail.com"},{"name":"climba03003","email":"kaka@kakawebsitedemo.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/busboy_1.0.0-next2_1638650399720_0.4605750121075931"},"_hasShrinkwrap":false},"1.0.0":{"name":"@fastify/busboy","version":"1.0.0","private":false,"author":{"name":"Brian White","email":"mscdex@mscdex.net"},"contributors":[{"name":"Igor Savin","email":"kibertoad@gmail.com","url":"https://github.com/kibertoad"},{"name":"Aras Abbasi","email":"aras.abbasi@gmail.com","url":"https://github.com/uzlopak"}],"description":"A streaming parser for HTML form data for node.js","main":"lib/main","types":"lib/main.d.ts","scripts":{"bench:busboy":"node bench/fastify-busboy-bench.js","bench:dicer":"node bench/dicer/dicer-bench-multipart-parser.js","coveralls":"nyc report --reporter=lcov","lint":"npm run lint:standard","lint:everything":"npm run lint && npm run test:types","lint:fix":"standard --fix","lint:standard":"standard --verbose | snazzy","test:mocha":"mocha test","test:types":"tsd","test:coverage":"nyc npm run test","test":"npm run test:mocha"},"engines":{"node":">=10.17.0"},"dependencies":{"text-decoding":"^1.0.0"},"devDependencies":{"@types/node":"^16.11.10","busboy":"^0.3.1","chai":"^4.3.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-node":"^11.1.0","mocha":"^9.1.3","nyc":"^15.1.0","photofinish":"^1.8.0","snazzy":"^9.0.0","standard":"^16.0.4","tsd":"^0.19.0","typescript":"^4.5.2"},"keywords":["uploads","forms","multipart","form-data"],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/fastify/busboy.git"},"tsd":{"directory":"test/types","compilerOptions":{"esModuleInterop":false,"module":"commonjs","target":"ES2017"}},"standard":{"globals":["describe","it"],"ignore":["bench"]},"gitHead":"3bf9980bcc31e1ffa8fdaa1289599ff23e3b7dba","bugs":{"url":"https://github.com/fastify/busboy/issues"},"homepage":"https://github.com/fastify/busboy#readme","_id":"@fastify/busboy@1.0.0","_nodeVersion":"16.12.0","_npmVersion":"8.1.0","dist":{"integrity":"sha512-tzTXX1TFEjWCseEsNdIlXXkD+48uJoN+zpqIojUX4pSoMscsbhO/UuVEB5SzJucexqDWOo2ma0ECwdD7hZdrzg==","shasum":"f73182e61955ab91f8ec5a137fda2c9cee366dbd","tarball":"https://registry.npmjs.org/@fastify/busboy/-/busboy-1.0.0.tgz","fileCount":13,"unpackedSize":61282,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhq9+HCRA9TVsSAnZWagAAOY8P/067AupncstlIEfj+Vai\nO+cgkiYjqf6cARpeDQ5o+2GzxSBoveqSjCUY0sFflkgKhgczeQ90fBGI5V3T\nF8IASGcvirCluvvdC8u2mtCHlZFHG1Chmx4L7ENpRS/YBFXTjJi094GSYTde\nJlq5Olfc0VbBHWq7PGFcbZwlUhlZfAq4ZtO+E11d7hO2nSixDmuwyFM/41xH\nNeGpFcV9pPotXKePoG/QvEjvGkbaQX02eIWk7aeD3++OFKWUgmi5gYM33akR\nh63hZPgZxDcO2P7mOx/QNPUs3oHtH6VTQgLX/HP4JmLfq/AAmRukpOYerJUk\nXw+WyldzDf8VIm6ycAGkcpghZ0WN7onfEjnPe8iQEYtnSyCAZgNkuWseW8En\n6bEfV6QsBilHoPV9h2GQ0xARX7igzk/d6D5eTcF/WunyFFhZdvb546rfR5OM\nV/CaV3hDGr52xiLj5TunXgFwbp07TY/tU/sqtq3iX7yQi/ZkW+sWhuWv9cpP\nDUGJX8OICpz7BGuaGZXGTbe4higJ++SrnVPDGdWAy/MssM99S78BfvQQqXtO\nPOeE581Tw53x3UVmPYMSLWBZmBOKKXRe07k8EaEiLGofQpCfqx3bkHMRWjRH\nqzXItUoZWEifpe8sbKClp4SnjJrhbk1nNLhAo5l5k3cPotS9F8WE46JiJQr8\n2mLF\r\n=3Nws\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDvV1ZxnHzjd82fJ9EcSdnNupk1OGf1jlPM+P6KVIRt5gIhAObGr18m9oT5c6qdLAdBylEbGk6tTxi8ugwcPupOxcun"}]},"_npmUser":{"name":"kibertoad","email":"iselwin@gmail.com"},"directories":{},"maintainers":[{"name":"starptech","email":"deusdustin@gmail.com"},{"name":"delvedor","email":"tommydelved@gmail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"},{"name":"allevo","email":"tomallevi@gmail.com"},{"name":"jsumners","email":"james.sumners@gmail.com"},{"name":"zekth","email":"vince.legoff@gmail.com"},{"name":"ethan_arrowood","email":"ethan@arrowood.dev"},{"name":"eomm","email":"behemoth89@gmail.com"},{"name":"fox1t","email":"maksim@sinik.it"},{"name":"salmanm","email":"salmanmitha@gmail.com"},{"name":"davidmarkclements","email":"david.mark.clements@gmail.com"},{"name":"airhorns","email":"harry@harry.me"},{"name":"kibertoad","email":"iselwin@gmail.com"},{"name":"climba03003","email":"kaka@kakawebsitedemo.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/busboy_1.0.0_1638653831756_0.6782136573536353"},"_hasShrinkwrap":false},"1.1.0":{"name":"@fastify/busboy","version":"1.1.0","private":false,"author":{"name":"Brian White","email":"mscdex@mscdex.net"},"contributors":[{"name":"Igor Savin","email":"kibertoad@gmail.com","url":"https://github.com/kibertoad"},{"name":"Aras Abbasi","email":"aras.abbasi@gmail.com","url":"https://github.com/uzlopak"}],"description":"A streaming parser for HTML form data for node.js","main":"lib/main","types":"lib/main.d.ts","scripts":{"bench:busboy":"cd benchmarks && npm install && npm run benchmark-fastify","bench:dicer":"node bench/dicer/dicer-bench-multipart-parser.js","coveralls":"nyc report --reporter=lcov","lint":"npm run lint:standard","lint:everything":"npm run lint && npm run test:types","lint:fix":"standard --fix","lint:standard":"standard --verbose | snazzy","test:mocha":"mocha test","test:types":"tsd","test:coverage":"nyc npm run test","test":"npm run test:mocha"},"engines":{"node":">=10.17.0"},"dependencies":{"text-decoding":"^1.0.0"},"devDependencies":{"@types/node":"^17.0.0","busboy":"^1.0.0","chai":"^4.3.4","eslint":"^7.32.0","eslint-config-standard":"^16.0.3","eslint-plugin-node":"^11.1.0","mocha":"^10.0.0","nyc":"^15.1.0","photofinish":"^1.8.0","snazzy":"^9.0.0","standard":"^17.0.0","tsd":"^0.20.0","typescript":"^4.5.2"},"keywords":["uploads","forms","multipart","form-data"],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/fastify/busboy.git"},"tsd":{"directory":"test/types","compilerOptions":{"esModuleInterop":false,"module":"commonjs","target":"ES2017"}},"standard":{"globals":["describe","it"],"ignore":["bench"]},"gitHead":"5e7e2ed176e76b64f743fb6480b79be06ac6e0b2","bugs":{"url":"https://github.com/fastify/busboy/issues"},"homepage":"https://github.com/fastify/busboy#readme","_id":"@fastify/busboy@1.1.0","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-Fv854f94v0CzIDllbY3i/0NJPNBRNLDawf3BTYVGCe9VrIIs3Wi7AFx24F9NzCxdf0wyx/x0Q9kEVnvDOPnlxA==","shasum":"4472f856e2bb5a9ee34ad64b93891b73b73537ca","tarball":"https://registry.npmjs.org/@fastify/busboy/-/busboy-1.1.0.tgz","fileCount":14,"unpackedSize":70998,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCT6fQKyHLRZ4cmZlpZY3i8mks1yXEsI9j3vM4DFiqbzwIhAPFSVPlCx6LYIcAktxvfWhQ7WLWAw67O0vmRwhL/fBEA"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJioSApACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq3KhAAliJfks9kG0co1QFT6R7rXClOSx2CXsKkJx+m1thNWpNzzTmv\r\nQ+/J0jzSK3WXPV0VKDpz7OmzlhdERAQZFCfXMKfIMejm+nADxRCrYxiG8FMT\r\nsgCLhAIamktQVpANS3V8aPH1QUhpgoMvCtNBVbyefTCGCP0jBw2H2uzLs7Uc\r\nZaNca1x1NQizpT2nOuM3o8NVVH0MJG1HXp7hgKCHEKpbEaSmGLl1K3ivmFOk\r\ntu2wRpGGl0AloqL1+3Br9qhdbe3h1cEcJcvYzk0HWDghyTHNA7xQlxXXPhp7\r\n8ZZJCwska1Aemym0WRs7WgTAoVuUKPoN9ExI8+qVSXUFm/CHQgzTAdKVxw2W\r\nEbJEVbYGpSOurZKf6f6kgjWbQ9+Rw1usLB5FB8fvD++dajsp3TNPozFAmu+J\r\nqyr35Ye7N3KaIBj/Aqh6WcIgfO2k9CFFAVHxVSjNS2RdWm8ioTr87V2/x7No\r\nM2oTDblQR07AMR3DkSPd+Y3K4aNi9Xo+WLNXdeU8s9J+WBKQYiWFaK2Y8hVe\r\nszCVxugV5zJsvY7KtLoNZdWmYTssvmSTVUA08+tjW4JvDtSL3qbNnAmxNxgU\r\nSBlGmC0K9Wxk3Xn0gKHSk2IZGtp7PBxPR30IfkrRIcKFcB18ecQY5hr6KeIo\r\nrPkyX6oSoNyRzK86OEpv5Ppu8a1OD3Guny8=\r\n=nvqZ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"kibertoad","email":"iselwin@gmail.com"},"directories":{},"maintainers":[{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"coopflow","email":"community@coopflow.com"},{"name":"simoneb","email":"simone.busoli@gmail.com"},{"name":"rafaelgss","email":"rafael.nunu@hotmail.com"},{"name":"starptech","email":"deusdustin@gmail.com"},{"name":"delvedor","email":"tommydelved@gmail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"},{"name":"allevo","email":"tomallevi@gmail.com"},{"name":"jsumners","email":"james.sumners@gmail.com"},{"name":"zekth","email":"vince.legoff@gmail.com"},{"name":"ethan_arrowood","email":"ethan@arrowood.dev"},{"name":"eomm","email":"behemoth89@gmail.com"},{"name":"fox1t","email":"maksim@sinik.it"},{"name":"davidmarkclements","email":"david.mark.clements@gmail.com"},{"name":"airhorns","email":"harry@harry.me"},{"name":"kibertoad","email":"iselwin@gmail.com"},{"name":"climba03003","email":"kaka@kakawebsitedemo.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/busboy_1.1.0_1654726696923_0.8438590372378669"},"_hasShrinkwrap":false},"1.2.0":{"name":"@fastify/busboy","version":"1.2.0","private":false,"author":{"name":"Brian White","email":"mscdex@mscdex.net"},"contributors":[{"name":"Igor Savin","email":"kibertoad@gmail.com","url":"https://github.com/kibertoad"},{"name":"Aras Abbasi","email":"aras.abbasi@gmail.com","url":"https://github.com/uzlopak"}],"description":"A streaming parser for HTML form data for node.js","main":"lib/main","types":"lib/main.d.ts","scripts":{"bench:busboy":"cd benchmarks && npm install && npm run benchmark-fastify","bench:dicer":"node bench/dicer/dicer-bench-multipart-parser.js","coveralls":"nyc report --reporter=lcov","lint":"npm run lint:standard","lint:everything":"npm run lint && npm run test:types","lint:fix":"standard --fix","lint:standard":"standard --verbose | snazzy","test:mocha":"mocha test","test:types":"tsd","test:coverage":"nyc npm run test","test":"npm run test:mocha"},"engines":{"node":">=14"},"dependencies":{"text-decoding":"^1.0.0"},"devDependencies":{"@types/node":"^18.0.0","busboy":"^1.0.0","chai":"^4.3.6","eslint":"^8.23.0","eslint-config-standard":"^17.0.0","eslint-plugin-n":"^15.2.5","mocha":"^10.0.0","nyc":"^15.1.0","photofinish":"^1.8.0","snazzy":"^9.0.0","standard":"^17.0.0","tsd":"^0.25.0","typescript":"^4.5.2"},"keywords":["uploads","forms","multipart","form-data"],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/fastify/busboy.git"},"tsd":{"directory":"test/types","compilerOptions":{"esModuleInterop":false,"module":"commonjs","target":"ES2017"}},"standard":{"globals":["describe","it"],"ignore":["bench"]},"gitHead":"f7aef852dae44feaf81d9df3f7ae01bb383fdb7c","bugs":{"url":"https://github.com/fastify/busboy/issues"},"homepage":"https://github.com/fastify/busboy#readme","_id":"@fastify/busboy@1.2.0","_nodeVersion":"18.6.0","_npmVersion":"8.13.2","dist":{"integrity":"sha512-VUv6/dbzWJhOXXEVCSXbgk21zeIErxbTJ//OGXVauqTjpZtzX+qslJ6gJqR+FyThgPvOKbrzsjnkykYwf8VGdQ==","shasum":"0db842e132cfc282b753eab70ab606f2475acee7","tarball":"https://registry.npmjs.org/@fastify/busboy/-/busboy-1.2.0.tgz","fileCount":18,"unpackedSize":72159,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC0vHX00f9ZoJtsXasf55Dln1aBd+tokSN+t6WeO6rakAIhANxb9b/7aHpx6eYse2GBBzkglOeBugPtN14IPPAy60lp"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjt9u1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrYig//cx5aZ0RdD399C9HZTkQ4oJqfGt8FqYAFj9XvDJ/k1WsrOl+T\r\nE2GH9vhQlXyqvvB1QLPz6AGJALGs2HvJ32jbgXmL0fBVB7K93cx5B6ZSncRt\r\neVu/Lc7FXqo7668oCPCpOHLxhj2W1ea+jwTPHsReHWDkRO3cdt7Gjy3qDrS0\r\nZiwf2Chryhux/RXuLbSSUtvliBhiQX+sIHPdiUuXb3+CWNnn7mOBuMlFxDWg\r\nD/3ozOTscJryEtMXSzYjekrZ9y9c7lS2zE7FFgREmEaJJso1Gt69qlGP1Rbt\r\nPrcibXAx4RwTsweAkVPUlBqMxek8ZYGrwjyofNgv60eNMeXMC2TUsBquDoqz\r\nLQyAaXUdetL6PcE6enC/lscyRD5FkAqLzOxe8mIMwL8jZ755V91+jqN/QL8G\r\njc8XaIYlcgejlevbK7bItf4jcojnnyZ06ROr5EbFFYG9C95QUHHEIbopSoPe\r\nHF7kOt7TNMybr1jN2WWF6K2mkCbyAWin5cAj+H7N9rG5PKa9LoFrrlDW5Teg\r\nbQQuPYVOMKeC0KvDxSiBkzY4Eu9co2DvOJMNu4ARVsQ7LeEZApKXjYsntRcn\r\nRUlTsg8t0xJoFCKwIkAk5tDnX9zv+kVxfdLlKgOMEc6rFFUPCgFaFXahXV/b\r\n0Ip97c6/iDUFCSNmh3mjaA/oi8TvSiK8/tU=\r\n=IeS1\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"eomm","email":"behemoth89@gmail.com"},"directories":{},"maintainers":[{"name":"galvez","email":"jonasgalvez@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"coopflow","email":"community@coopflow.com"},{"name":"simoneb","email":"simone.busoli@gmail.com"},{"name":"rafaelgss","email":"rafael.nunu@hotmail.com"},{"name":"starptech","email":"deusdustin@gmail.com"},{"name":"delvedor","email":"tommydelved@gmail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"},{"name":"allevo","email":"tomallevi@gmail.com"},{"name":"jsumners","email":"james.sumners@gmail.com"},{"name":"zekth","email":"vince.legoff@gmail.com"},{"name":"eomm","email":"behemoth89@gmail.com"},{"name":"fox1t","email":"maksim@sinik.it"},{"name":"davidmarkclements","email":"david.mark.clements@gmail.com"},{"name":"airhorns","email":"harry@harry.me"},{"name":"kibertoad","email":"iselwin@gmail.com"},{"name":"climba03003","email":"kaka@kakawebsitedemo.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/busboy_1.2.0_1672993716964_0.7070179087015624"},"_hasShrinkwrap":false},"1.2.1":{"name":"@fastify/busboy","version":"1.2.1","private":false,"author":{"name":"Brian White","email":"mscdex@mscdex.net"},"contributors":[{"name":"Igor Savin","email":"kibertoad@gmail.com","url":"https://github.com/kibertoad"},{"name":"Aras Abbasi","email":"aras.abbasi@gmail.com","url":"https://github.com/uzlopak"}],"description":"A streaming parser for HTML form data for node.js","main":"lib/main","types":"lib/main.d.ts","scripts":{"bench:busboy":"cd benchmarks && npm install && npm run benchmark-fastify","bench:dicer":"node bench/dicer/dicer-bench-multipart-parser.js","coveralls":"nyc report --reporter=lcov","lint":"npm run lint:standard","lint:everything":"npm run lint && npm run test:types","lint:fix":"standard --fix","lint:standard":"standard --verbose | snazzy","test:mocha":"mocha test","test:types":"tsd","test:coverage":"nyc npm run test","test":"npm run test:mocha"},"engines":{"node":">=14"},"dependencies":{"text-decoding":"^1.0.0"},"devDependencies":{"@types/node":"^18.0.0","busboy":"^1.0.0","chai":"^4.3.6","eslint":"^8.23.0","eslint-config-standard":"^17.0.0","eslint-plugin-n":"^15.2.5","mocha":"^10.0.0","nyc":"^15.1.0","photofinish":"^1.8.0","snazzy":"^9.0.0","standard":"^17.0.0","tsd":"^0.25.0","typescript":"^4.5.2"},"keywords":["uploads","forms","multipart","form-data"],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/fastify/busboy.git"},"tsd":{"directory":"test/types","compilerOptions":{"esModuleInterop":false,"module":"commonjs","target":"ES2017"}},"standard":{"globals":["describe","it"],"ignore":["bench"]},"gitHead":"699b31655a62b0a64a061aa1cedaa80a80a0543d","bugs":{"url":"https://github.com/fastify/busboy/issues"},"homepage":"https://github.com/fastify/busboy#readme","_id":"@fastify/busboy@1.2.1","_nodeVersion":"16.13.0","_npmVersion":"8.10.0","dist":{"integrity":"sha512-7PQA7EH43S0CxcOa9OeAnaeA0oQ+e/DHNPZwSQM9CQHW76jle5+OvLdibRp/Aafs9KXbLhxyjOTkRjWUbQEd3Q==","shasum":"9c6db24a55f8b803b5222753b24fe3aea2ba9ca3","tarball":"https://registry.npmjs.org/@fastify/busboy/-/busboy-1.2.1.tgz","fileCount":18,"unpackedSize":71933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCID07hQPhu2Bkqm6viycpR0CQaDlcGDsxV82iwqdHZ/A6AiEApOpbLYt6Jzy2XHNMkc5fU+tl2rwxnzRSvVtmewUmb2U="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjup5cACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqZmw//URzVqgnK+45dtjK1DZCWhactQUDoQLHkhpUqCWKSQptyuuVV\r\nmE7PxzMy3SskYmwGhtNVp6/itM3UBQqe/yf3827qLymP8JmJ77BHfOXOiVcn\r\nyt1w65k+sBtxl+bLTyfneyiy+FbobkxHQqQS+ejGWKjBRrhVcVLfCsUWYLFw\r\nb5wCQuETiiAi0YlxBVf0nc10yfy4d2rU83scd/YaG5neIlBDP6JmK01lxJ4j\r\n5aIf2LxKA/Oc4yRUp706EJSLa9wQR3y8068vf7F4b7iVpmgL2myfhQo6DSJO\r\nIwm74grQVUhKfdsOoGoxxU0f0q4WDGT5qXCaikEYTZ6KTps+juY0jbpWFWXM\r\nphapOyikLVJXIdgOQst+zwSVnC9YrpVwwotB7jUQknToT5y0UPPRU3H3drtT\r\nfYYb4dUK12GSOtTolOoDtbYSn8LQXN6VUx2u5e6L3medTH5kPoam5KGb9PJG\r\nd6o8QyGcHt5f/n18DfIbUepoRnRWJAr0mDjcqef9ityGbs1SppFhEAFRA1yp\r\nlBcBUGJ6pAt0Cxci8f2+N5TQiSaPX/3NqpVvMZfaz9UkwjxI84W4R+GfJ67B\r\nVjMALKP0Z+dsrfaoqwh9qD3WdTFKejN3w3OC6t8o+Ab/cbj/YJzCePEb+Bgo\r\nzLSX4YfGu7Xwbn+jNvonhufoxf/J3gx148g=\r\n=gFQd\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"eomm","email":"behemoth89@gmail.com"},"directories":{},"maintainers":[{"name":"galvez","email":"jonasgalvez@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"coopflow","email":"community@coopflow.com"},{"name":"simoneb","email":"simone.busoli@gmail.com"},{"name":"rafaelgss","email":"rafael.nunu@hotmail.com"},{"name":"starptech","email":"deusdustin@gmail.com"},{"name":"delvedor","email":"tommydelved@gmail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"},{"name":"allevo","email":"tomallevi@gmail.com"},{"name":"jsumners","email":"james.sumners@gmail.com"},{"name":"zekth","email":"vince.legoff@gmail.com"},{"name":"eomm","email":"behemoth89@gmail.com"},{"name":"fox1t","email":"maksim@sinik.it"},{"name":"davidmarkclements","email":"david.mark.clements@gmail.com"},{"name":"airhorns","email":"harry@harry.me"},{"name":"kibertoad","email":"iselwin@gmail.com"},{"name":"climba03003","email":"kaka@kakawebsitedemo.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/busboy_1.2.1_1673174620397_0.40586458278088555"},"_hasShrinkwrap":false},"2.0.0":{"name":"@fastify/busboy","version":"2.0.0","private":false,"author":{"name":"Brian White","email":"mscdex@mscdex.net"},"contributors":[{"name":"Igor Savin","email":"kibertoad@gmail.com","url":"https://github.com/kibertoad"},{"name":"Aras Abbasi","email":"aras.abbasi@gmail.com","url":"https://github.com/uzlopak"}],"description":"A streaming parser for HTML form data for node.js","main":"lib/main","types":"lib/main.d.ts","scripts":{"bench:busboy":"cd benchmarks && npm install && npm run benchmark-fastify","bench:dicer":"node bench/dicer/dicer-bench-multipart-parser.js","coveralls":"nyc report --reporter=lcov","lint":"npm run lint:standard","lint:everything":"npm run lint && npm run test:types","lint:fix":"standard --fix","lint:standard":"standard --verbose | snazzy","test:mocha":"mocha test","test:types":"tsd","test:coverage":"nyc npm run test","test":"npm run test:mocha"},"engines":{"node":">=14"},"devDependencies":{"@types/node":"^20.1.0","busboy":"^1.0.0","chai":"^4.3.6","eslint":"^8.23.0","eslint-config-standard":"^17.0.0","eslint-plugin-n":"^16.0.0","mocha":"^10.0.0","nyc":"^15.1.0","photofinish":"^1.8.0","snazzy":"^9.0.0","standard":"^17.0.0","tsd":"^0.29.0","typescript":"^5.0.2"},"keywords":["uploads","forms","multipart","form-data"],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/fastify/busboy.git"},"tsd":{"directory":"test/types","compilerOptions":{"esModuleInterop":false,"module":"commonjs","target":"ES2017"}},"standard":{"globals":["describe","it"],"ignore":["bench"]},"_id":"@fastify/busboy@2.0.0","gitHead":"5f71e5fc271d81e277b90f77d6122684e00238fb","bugs":{"url":"https://github.com/fastify/busboy/issues"},"homepage":"https://github.com/fastify/busboy#readme","_nodeVersion":"20.6.1","_npmVersion":"9.8.1","dist":{"integrity":"sha512-JUFJad5lv7jxj926GPgymrWQxxjPYuJNiNjNMzqT+HiuP6Vl3dk5xzG+8sTX96np0ZAluvaMzPsjhHZ5rNuNQQ==","shasum":"f22824caff3ae506b18207bad4126dbc6ccdb6b8","tarball":"https://registry.npmjs.org/@fastify/busboy/-/busboy-2.0.0.tgz","fileCount":18,"unpackedSize":70738,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD7/V5Aw3oxRiROvV0vdG1yGSyvGEPbSlXFMTr3liNCNAIhAN0OdgNSiWOf7h8sw4o/+VN0/TwoeSrOGc6W4p1n4DLh"}]},"_npmUser":{"name":"kibertoad","email":"iselwin@gmail.com"},"directories":{},"maintainers":[{"name":"gurgunday","email":"gurgun.dayioglu@icloud.com"},{"name":"metcoder95","email":"me@metcoder.dev"},{"name":"galvez","email":"jonasgalvez@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"coopflow","email":"community@coopflow.com"},{"name":"simoneb","email":"simone.busoli@gmail.com"},{"name":"rafaelgss","email":"rafael.nunu@hotmail.com"},{"name":"starptech","email":"deusdustin@gmail.com"},{"name":"delvedor","email":"tommydelved@gmail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"},{"name":"allevo","email":"tomallevi@gmail.com"},{"name":"jsumners","email":"james.sumners@gmail.com"},{"name":"zekth","email":"vince.legoff@gmail.com"},{"name":"eomm","email":"behemoth89@gmail.com"},{"name":"fox1t","email":"maksim@sinik.it"},{"name":"airhorns","email":"harry@harry.me"},{"name":"kibertoad","email":"iselwin@gmail.com"},{"name":"climba03003","email":"kaka@kakawebsitedemo.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/busboy_2.0.0_1695907620278_0.8437674673648068"},"_hasShrinkwrap":false},"2.1.0":{"name":"@fastify/busboy","version":"2.1.0","private":false,"author":{"name":"Brian White","email":"mscdex@mscdex.net"},"contributors":[{"name":"Igor Savin","email":"kibertoad@gmail.com","url":"https://github.com/kibertoad"},{"name":"Aras Abbasi","email":"aras.abbasi@gmail.com","url":"https://github.com/uzlopak"}],"description":"A streaming parser for HTML form data for node.js","main":"lib/main","type":"commonjs","types":"lib/main.d.ts","scripts":{"bench:busboy":"cd benchmarks && npm install && npm run benchmark-fastify","bench:dicer":"node bench/dicer/dicer-bench-multipart-parser.js","coveralls":"nyc report --reporter=lcov","lint":"npm run lint:standard","lint:everything":"npm run lint && npm run test:types","lint:fix":"standard --fix","lint:standard":"standard --verbose | snazzy","test:mocha":"tap","test:types":"tsd","test:coverage":"nyc npm run test","test":"npm run test:mocha"},"engines":{"node":">=14"},"devDependencies":{"@types/node":"^20.1.0","busboy":"^1.0.0","photofinish":"^1.8.0","snazzy":"^9.0.0","standard":"^17.0.0","tap":"^16.3.8","tinybench":"^2.5.1","tsd":"^0.29.0","typescript":"^5.0.2"},"keywords":["uploads","forms","multipart","form-data"],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/fastify/busboy.git"},"tsd":{"directory":"test/types","compilerOptions":{"esModuleInterop":false,"module":"commonjs","target":"ES2017"}},"standard":{"globals":["describe","it"],"ignore":["bench"]},"_id":"@fastify/busboy@2.1.0","gitHead":"d1e4bf4b964047ffdf6e93023fe4cfef0feb7efb","bugs":{"url":"https://github.com/fastify/busboy/issues"},"homepage":"https://github.com/fastify/busboy#readme","_nodeVersion":"20.8.0","_npmVersion":"10.1.0","dist":{"integrity":"sha512-+KpH+QxZU7O4675t3mnkQKcZZg56u+K/Ct2K+N2AZYNVK8kyeo/bI18tI8aPm3tvNNRyTWfj6s5tnGNlcbQRsA==","shasum":"0709e9f4cb252351c609c6e6d8d6779a8d25edff","tarball":"https://registry.npmjs.org/@fastify/busboy/-/busboy-2.1.0.tgz","fileCount":18,"unpackedSize":80110,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAUa+zmd27cn4TxfP5Q5VmOL7Q2rin8jAlTgwxF/qqTGAiEAjriItnfG9nqsguw7+alnUOw31Pm00uh40xJZ/nT532U="}]},"_npmUser":{"name":"eomm","email":"behemoth89@gmail.com"},"directories":{},"maintainers":[{"name":"gurgunday","email":"gurgun.dayioglu@icloud.com"},{"name":"metcoder95","email":"me@metcoder.dev"},{"name":"galvez","email":"jonasgalvez@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"coopflow","email":"community@coopflow.com"},{"name":"simoneb","email":"simone.busoli@gmail.com"},{"name":"rafaelgss","email":"rafael.nunu@hotmail.com"},{"name":"starptech","email":"deusdustin@gmail.com"},{"name":"delvedor","email":"tommydelved@gmail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"},{"name":"allevo","email":"tomallevi@gmail.com"},{"name":"jsumners","email":"james.sumners@gmail.com"},{"name":"zekth","email":"vince.legoff@gmail.com"},{"name":"eomm","email":"behemoth89@gmail.com"},{"name":"fox1t","email":"maksim@sinik.it"},{"name":"airhorns","email":"harry@harry.me"},{"name":"kibertoad","email":"iselwin@gmail.com"},{"name":"climba03003","email":"kaka@kakawebsitedemo.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/busboy_2.1.0_1699787989993_0.23891525562201998"},"_hasShrinkwrap":false},"2.1.1":{"name":"@fastify/busboy","version":"2.1.1","private":false,"author":{"name":"Brian White","email":"mscdex@mscdex.net"},"contributors":[{"name":"Igor Savin","email":"kibertoad@gmail.com","url":"https://github.com/kibertoad"},{"name":"Aras Abbasi","email":"aras.abbasi@gmail.com","url":"https://github.com/uzlopak"}],"description":"A streaming parser for HTML form data for node.js","main":"lib/main","type":"commonjs","types":"lib/main.d.ts","scripts":{"bench:busboy":"cd benchmarks && npm install && npm run benchmark-fastify","bench:dicer":"node bench/dicer/dicer-bench-multipart-parser.js","coveralls":"nyc report --reporter=lcov","lint":"npm run lint:standard","lint:everything":"npm run lint && npm run test:types","lint:fix":"standard --fix","lint:standard":"standard --verbose | snazzy","test:mocha":"tap","test:types":"tsd","test:coverage":"nyc npm run test","test":"npm run test:mocha"},"engines":{"node":">=14"},"devDependencies":{"@types/node":"^20.1.0","busboy":"^1.0.0","photofinish":"^1.8.0","snazzy":"^9.0.0","standard":"^17.0.0","tap":"^16.3.8","tinybench":"^2.5.1","tsd":"^0.30.0","typescript":"^5.0.2"},"keywords":["uploads","forms","multipart","form-data"],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/fastify/busboy.git"},"tsd":{"directory":"test/types","compilerOptions":{"esModuleInterop":false,"module":"commonjs","target":"ES2017"}},"standard":{"globals":["describe","it"],"ignore":["bench"]},"_id":"@fastify/busboy@2.1.1","gitHead":"906dde876d1e088133ef8ea77b94bc87b2d90b08","bugs":{"url":"https://github.com/fastify/busboy/issues"},"homepage":"https://github.com/fastify/busboy#readme","_nodeVersion":"20.11.0","_npmVersion":"10.2.4","dist":{"integrity":"sha512-vBZP4NlzfOlerQTnba4aqZoMhE/a9HY7HRqoOPaETQcSQuWEIyZMHGfVu6w9wGtGK5fED5qRs2DteVCjOH60sA==","shasum":"b9da6a878a371829a0502c9b6c1c143ef6663f4d","tarball":"https://registry.npmjs.org/@fastify/busboy/-/busboy-2.1.1.tgz","fileCount":18,"unpackedSize":80189,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIE/rdYw9bJvRw8Gga0TFHbN4BrfAtMqOohHn38e7Aj7PAiBm8y851FQ2KkKceC7mOocH7Do+jGJ06XZ9NFDJKT5bKg=="}]},"_npmUser":{"name":"gurgunday","email":"gurgun.dayioglu@icloud.com"},"directories":{},"maintainers":[{"name":"gurgunday","email":"gurgun.dayioglu@icloud.com"},{"name":"metcoder95","email":"me@metcoder.dev"},{"name":"galvez","email":"jonasgalvez@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"coopflow","email":"community@coopflow.com"},{"name":"simoneb","email":"simone.busoli@gmail.com"},{"name":"rafaelgss","email":"rafael.nunu@hotmail.com"},{"name":"starptech","email":"deusdustin@gmail.com"},{"name":"delvedor","email":"tommydelved@gmail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"},{"name":"allevo","email":"tomallevi@gmail.com"},{"name":"jsumners","email":"james.sumners@gmail.com"},{"name":"zekth","email":"vince.legoff@gmail.com"},{"name":"eomm","email":"behemoth89@gmail.com"},{"name":"fox1t","email":"maksim@sinik.it"},{"name":"airhorns","email":"harry@harry.me"},{"name":"kibertoad","email":"iselwin@gmail.com"},{"name":"climba03003","email":"kaka@kakawebsitedemo.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/busboy_2.1.1_1709140794301_0.37868427288992734"},"_hasShrinkwrap":false}},"time":{"created":"2021-11-29T22:21:13.417Z","1.0.0-next1":"2021-11-29T22:21:13.703Z","modified":"2024-02-28T17:19:55.231Z","1.0.0-next2":"2021-12-04T20:39:59.966Z","1.0.0":"2021-12-04T21:37:11.881Z","1.1.0":"2022-06-08T22:18:17.110Z","1.2.0":"2023-01-06T08:28:37.106Z","1.2.1":"2023-01-08T10:43:40.566Z","2.0.0":"2023-09-28T13:27:00.533Z","2.1.0":"2023-11-12T11:19:50.196Z","2.1.1":"2024-02-28T17:19:54.514Z"},"maintainers":[{"name":"gurgunday","email":"gurgun.dayioglu@icloud.com"},{"name":"metcoder95","email":"me@metcoder.dev"},{"name":"galvez","email":"jonasgalvez@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"coopflow","email":"community@coopflow.com"},{"name":"simoneb","email":"simone.busoli@gmail.com"},{"name":"rafaelgss","email":"rafael.nunu@hotmail.com"},{"name":"starptech","email":"deusdustin@gmail.com"},{"name":"delvedor","email":"tommydelved@gmail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"},{"name":"allevo","email":"tomallevi@gmail.com"},{"name":"jsumners","email":"james.sumners@gmail.com"},{"name":"zekth","email":"vince.legoff@gmail.com"},{"name":"eomm","email":"behemoth89@gmail.com"},{"name":"fox1t","email":"maksim@sinik.it"},{"name":"airhorns","email":"harry@harry.me"},{"name":"kibertoad","email":"iselwin@gmail.com"},{"name":"climba03003","email":"kaka@kakawebsitedemo.com"}],"description":"A streaming parser for HTML form data for node.js","homepage":"https://github.com/fastify/busboy#readme","keywords":["uploads","forms","multipart","form-data"],"repository":{"type":"git","url":"git+https://github.com/fastify/busboy.git"},"contributors":[{"name":"Igor Savin","email":"kibertoad@gmail.com","url":"https://github.com/kibertoad"},{"name":"Aras Abbasi","email":"aras.abbasi@gmail.com","url":"https://github.com/uzlopak"}],"author":{"name":"Brian White","email":"mscdex@mscdex.net"},"bugs":{"url":"https://github.com/fastify/busboy/issues"},"license":"MIT","readme":"# busboy\n\n<div align=\"center\">\n\n[![Build Status](https://github.com/fastify/busboy/actions/workflows/ci.yml/badge.svg)](https://github.com/fastify/busboy/actions)\n[![Coverage Status](https://coveralls.io/repos/fastify/busboy/badge.svg?branch=master)](https://coveralls.io/r/fastify/busboy?branch=master)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://standardjs.com/)\n[![Security Responsible Disclosure](https://img.shields.io/badge/Security-Responsible%20Disclosure-yellow.svg)](https://github.com/fastify/.github/blob/main/SECURITY.md)\n\n</div>\n\n<div align=\"center\">\n\n[![NPM version](https://img.shields.io/npm/v/@fastify/busboy.svg?style=flat)](https://www.npmjs.com/package/@fastify/busboy)\n[![NPM downloads](https://img.shields.io/npm/dm/@fastify/busboy.svg?style=flat)](https://www.npmjs.com/package/@fastify/busboy)\n\n</div>\n\nDescription\n===========\n\nA Node.js module for parsing incoming HTML form data.\n\nThis is an officially supported fork by [fastify](https://github.com/fastify/) organization of the amazing library [originally created](https://github.com/mscdex/busboy) by Brian White,\naimed at addressing long-standing issues with it.\n\nBenchmark (Mean time for 500 Kb payload, 2000 cycles, 1000 cycle warmup):\n\n| Library               | Version | Mean time in nanoseconds (less is better) |\n|-----------------------|---------|-------------------------------------------|\n| busboy                | 0.3.1   | `340114`                                  |\n| @fastify/busboy       | 1.0.0   | `270984`                                  |\n\n[Changelog](https://github.com/fastify/busboy/blob/master/CHANGELOG.md) since busboy 0.31.\n\nRequirements\n============\n\n* [Node.js](http://nodejs.org/) 10+\n\n\nInstall\n=======\n\n    npm i @fastify/busboy\n\n\nExamples\n========\n\n* Parsing (multipart) with default options:\n\n```javascript\nconst http = require('node:http');\nconst { inspect } = require('node:util');\nconst Busboy = require('busboy');\n\nhttp.createServer((req, res) => {\n  if (req.method === 'POST') {\n    const busboy = new Busboy({ headers: req.headers });\n    busboy.on('file', (fieldname, file, filename, encoding, mimetype) => {\n      console.log(`File [${fieldname}]: filename: ${filename}, encoding: ${encoding}, mimetype: ${mimetype}`);\n      file.on('data', data => {\n        console.log(`File [${fieldname}] got ${data.length} bytes`);\n      });\n      file.on('end', () => {\n        console.log(`File [${fieldname}] Finished`);\n      });\n    });\n    busboy.on('field', (fieldname, val, fieldnameTruncated, valTruncated, encoding, mimetype) => {\n      console.log(`Field [${fieldname}]: value: ${inspect(val)}`);\n    });\n    busboy.on('finish', () => {\n      console.log('Done parsing form!');\n      res.writeHead(303, { Connection: 'close', Location: '/' });\n      res.end();\n    });\n    req.pipe(busboy);\n  } else if (req.method === 'GET') {\n    res.writeHead(200, { Connection: 'close' });\n    res.end(`<html><head></head><body>\n               <form method=\"POST\" enctype=\"multipart/form-data\">\n                <input type=\"text\" name=\"textfield\"><br>\n                <input type=\"file\" name=\"filefield\"><br>\n                <input type=\"submit\">\n              </form>\n            </body></html>`);\n  }\n}).listen(8000, () => {\n  console.log('Listening for requests');\n});\n\n// Example output, using http://nodejs.org/images/ryan-speaker.jpg as the file:\n//\n// Listening for requests\n// File [filefield]: filename: ryan-speaker.jpg, encoding: binary\n// File [filefield] got 11971 bytes\n// Field [textfield]: value: 'testing! :-)'\n// File [filefield] Finished\n// Done parsing form!\n```\n\n* Save all incoming files to disk:\n\n```javascript\nconst http = require('node:http');\nconst path = require('node:path');\nconst os = require('node:os');\nconst fs = require('node:fs');\n\nconst Busboy = require('busboy');\n\nhttp.createServer(function(req, res) {\n  if (req.method === 'POST') {\n    const busboy = new Busboy({ headers: req.headers });\n    busboy.on('file', function(fieldname, file, filename, encoding, mimetype) {\n      var saveTo = path.join(os.tmpdir(), path.basename(fieldname));\n      file.pipe(fs.createWriteStream(saveTo));\n    });\n    busboy.on('finish', function() {\n      res.writeHead(200, { 'Connection': 'close' });\n      res.end(\"That's all folks!\");\n    });\n    return req.pipe(busboy);\n  }\n  res.writeHead(404);\n  res.end();\n}).listen(8000, function() {\n  console.log('Listening for requests');\n});\n```\n\n* Parsing (urlencoded) with default options:\n\n```javascript\nconst http = require('node:http');\nconst { inspect } = require('node:util');\n\nconst Busboy = require('busboy');\n\nhttp.createServer(function(req, res) {\n  if (req.method === 'POST') {\n    const busboy = new Busboy({ headers: req.headers });\n    busboy.on('file', function(fieldname, file, filename, encoding, mimetype) {\n      console.log('File [' + fieldname + ']: filename: ' + filename);\n      file.on('data', function(data) {\n        console.log('File [' + fieldname + '] got ' + data.length + ' bytes');\n      });\n      file.on('end', function() {\n        console.log('File [' + fieldname + '] Finished');\n      });\n    });\n    busboy.on('field', function(fieldname, val, fieldnameTruncated, valTruncated) {\n      console.log('Field [' + fieldname + ']: value: ' + inspect(val));\n    });\n    busboy.on('finish', function() {\n      console.log('Done parsing form!');\n      res.writeHead(303, { Connection: 'close', Location: '/' });\n      res.end();\n    });\n    req.pipe(busboy);\n  } else if (req.method === 'GET') {\n    res.writeHead(200, { Connection: 'close' });\n    res.end('<html><head></head><body>\\\n               <form method=\"POST\">\\\n                <input type=\"text\" name=\"textfield\"><br />\\\n                <select name=\"selectfield\">\\\n                  <option value=\"1\">1</option>\\\n                  <option value=\"10\">10</option>\\\n                  <option value=\"100\">100</option>\\\n                  <option value=\"9001\">9001</option>\\\n                </select><br />\\\n                <input type=\"checkbox\" name=\"checkfield\">Node.js rules!<br />\\\n                <input type=\"submit\">\\\n              </form>\\\n            </body></html>');\n  }\n}).listen(8000, function() {\n  console.log('Listening for requests');\n});\n\n// Example output:\n//\n// Listening for requests\n// Field [textfield]: value: 'testing! :-)'\n// Field [selectfield]: value: '9001'\n// Field [checkfield]: value: 'on'\n// Done parsing form!\n```\n\n\nAPI\n===\n\n_Busboy_ is a _Writable_ stream\n\nBusboy (special) events\n-----------------------\n\n* **file**(< _string_ >fieldname, < _ReadableStream_ >stream, < _string_ >filename, < _string_ >transferEncoding, < _string_ >mimeType) - Emitted for each new file form field found. `transferEncoding` contains the 'Content-Transfer-Encoding' value for the file stream. `mimeType` contains the 'Content-Type' value for the file stream.\n    * Note: if you listen for this event, you should always handle the `stream` no matter if you care about the file contents or not (e.g. you can simply just do `stream.resume();` if you want to discard the contents), otherwise the 'finish' event will never fire on the Busboy instance. However, if you don't care about **any** incoming files, you can simply not listen for the 'file' event at all and any/all files will be automatically and safely discarded (these discarded files do still count towards `files` and `parts` limits).\n    * If a configured file size limit was reached, `stream` will both have a boolean property `truncated` (best checked at the end of the stream) and emit a 'limit' event to notify you when this happens.\n    * The property `bytesRead` informs about the number of bytes that have been read so far.\n\n* **field**(< _string_ >fieldname, < _string_ >value, < _boolean_ >fieldnameTruncated, < _boolean_ >valueTruncated, < _string_ >transferEncoding, < _string_ >mimeType) - Emitted for each new non-file field found.\n\n* **partsLimit**() - Emitted when specified `parts` limit has been reached. No more 'file' or 'field' events will be emitted.\n\n* **filesLimit**() - Emitted when specified `files` limit has been reached. No more 'file' events will be emitted.\n\n* **fieldsLimit**() - Emitted when specified `fields` limit has been reached. No more 'field' events will be emitted.\n\n\nBusboy methods\n--------------\n\n* **(constructor)**(< _object_ >config) - Creates and returns a new Busboy instance.\n\n    * The constructor takes the following valid `config` settings:\n\n        * **headers** - _object_ - These are the HTTP headers of the incoming request, which are used by individual parsers.\n\n        * **autoDestroy** - _boolean_ - Whether this stream should automatically call .destroy() on itself after ending. (Default: false).\n\n        * **highWaterMark** - _integer_ - highWaterMark to use for this Busboy instance (Default: WritableStream default).\n\n        * **fileHwm** - _integer_ - highWaterMark to use for file streams (Default: ReadableStream default).\n\n        * **defCharset** - _string_ - Default character set to use when one isn't defined (Default: 'utf8').\n\n        * **preservePath** - _boolean_ - If paths in the multipart 'filename' field shall be preserved. (Default: false).\n\n        * **isPartAFile** - __function__ - Use this function to override the default file detection functionality. It has following parameters:\n\n            * fieldName - __string__ The name of the field.\n\n            * contentType - __string__ The content-type of the part, e.g. `text/plain`, `image/jpeg`, `application/octet-stream`\n\n            * fileName - __string__ The name of a file supplied by the part.\n\n          (Default: `(fieldName, contentType, fileName) => (contentType === 'application/octet-stream' || fileName !== undefined)`)\n\n        * **limits** - _object_ - Various limits on incoming data. Valid properties are:\n\n            * **fieldNameSize** - _integer_ - Max field name size (in bytes) (Default: 100 bytes).\n\n            * **fieldSize** - _integer_ - Max field value size (in bytes) (Default: 1 MiB, which is 1024 x 1024 bytes).\n\n            * **fields** - _integer_ - Max number of non-file fields (Default: Infinity).\n\n            * **fileSize** - _integer_ - For multipart forms, the max file size (in bytes) (Default: Infinity).\n\n            * **files** - _integer_ - For multipart forms, the max number of file fields (Default: Infinity).\n\n            * **parts** - _integer_ - For multipart forms, the max number of parts (fields + files) (Default: Infinity).\n\n            * **headerPairs** - _integer_ - For multipart forms, the max number of header key=>value pairs to parse **Default:** 2000\n\n            * **headerSize** - _integer_ - For multipart forms, the max size of a multipart header **Default:** 81920.\n\n    * The constructor can throw errors:\n\n        * **Busboy expected an options-Object.** - Busboy expected an Object as first parameters.\n\n        * **Busboy expected an options-Object with headers-attribute.** - The first parameter is lacking of a headers-attribute.\n\n        * **Limit $limit is not a valid number** - Busboy expected the desired limit to be of type number. Busboy throws this Error to prevent a potential security issue by falling silently back to the Busboy-defaults. Potential source for this Error can be the direct use of environment variables without transforming them to the type number. \n\n        * **Unsupported Content-Type.** - The `Content-Type` isn't one Busboy can parse.\n\n        * **Missing Content-Type-header.** - The provided headers don't include `Content-Type` at all.\n","readmeFilename":"README.md"}